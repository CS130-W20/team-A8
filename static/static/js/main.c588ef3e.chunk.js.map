{"version":3,"sources":["components/Header.js","components/FacebookLoginButton.js","components/Home.js","components/Messages.js","components/Profile.js","components/Games.js","components/SingleGame.js","App.js","serviceWorker.js","index.js"],"names":["Search","Title","pmenu","Item","to","header","style","width","backgroundColor","float","color","position","left","top","level","theme","mode","lineHeight","align","key","type","overlay","className","onClick","e","preventDefault","placeholder","onSearch","value","console","log","right","FacebookLogin","initializeFacebookLogin","FB","window","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","response","status","login","scope","api","userData","result","user","props","onLogin","document","addEventListener","this","removeEventListener","children","Component","Content","Home","axios","get","config","backend_url","then","padding","marginTop","authenticate","React","Sider","Messages","state","apiResponse","title","fetch","res","json","data","setState","catch","err","partner","connect","inbox","minHeight","size","icon","defaultSelectedKeys","margin","background","ref","node","container","target","enterButton","Text","Paragraph","Profile","userId","isProfileOwner","currMenu","showProfileModal","confirmProfileModalLoading","handleMenuClick","event","onUsernameEdit","username","a","userInfo","post","onBioEdit","bio","removeCard","id","removedType","filter","val","ind","arr","toString","removeInd","gameInfo","splice","openProfileModal","handleProfileModalOk","newProfilePicture","formData","FormData","append","undefined","headers","url","profilePicture","handleProfileModalCancel","getGameList","idList","InfoPromises","i","length","gameReq","coverReq","push","Promise","all","setNewProfilePicture","file","onSuccess","setTimeout","handleUploadChange","info","fileList","nextHosting","bind","prevHosting","nextFavorites","prevFavorites","values","queryString","parse","location","search","carouselHosting","createRef","carouselFavorites","getUserInfo","next","prev","method","createCards","cards","src","name","cursor","hostingCards","favoritesCards","dots","speed","circular","slidesToScroll","visible","confirmLoading","onCancel","footer","form","htmlType","onSubmit","Dragger","multiple","customRequest","onChange","accept","fontSize","editable","slidesToShow","Math","min","ellipsis","rows","expandable","SubMenu","Games","genre_filter","genre","previous","carousel","limit","popular","span","class","infinite","map","elem","coverUrl","SingleGame","apiScreenshots","apiAges","apiDescription","apiGenre","apiPlatforms","descriptionFound","timestamp","Date","toDateString","split","slice","join","loginStatus","resultObject","URLSearchParams","screenshots","age_ratings","genres","platforms","text","getGame","getDescription","cover","alignItems","height","character","count","allowHalf","disabled","defaultValue","synopsis","justify","replace","onFacebookLogin","label","versions","convertDate","first_release_date","rating_count","App","Header","exact","path","component","render","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c588ef3e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Avatar, Menu, Input, Typography, Icon, Dropdown } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\nconst { Title } = Typography;\n\nconst pmenu = (\n  <Menu>\n    <Menu.Item>\n      <Link to=\"/people\">hosts</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"/profile\">profile</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"/inbox\">inbox</Link>\n    </Menu.Item>\n  </Menu>\n);\n\nconst header = () => {\n  return (\n    <div style={{ width: \"100%\", backgroundColor: '#041527'}}>\n      <div style={{ width: \"calc(100% - 250px)\" }}>\n        <Title style={{ float: \"left\", color: \"white\", position: 'absolute', left: '10px', top: '16px'}} level={4}>\n          GAMELINKS\n        </Title>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          //   defaultSelectedKeys={[\"0\"]}\n          style={{ lineHeight: \"64px\"}}\n          align=\"right\"\n        >\n        {/* <Menu.Item key=\"test\">\n          <Link to=\"/messages\">\n            Messages (Test)\n          </Link>\n        </Menu.Item> */}\n          <Menu.Item key=\"0\">\n            <Link to=\"/\">\n              <Icon type=\"home\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"1\">\n            <Dropdown overlay={pmenu}>\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                people\n                <Icon type=\"down\" />\n              </a>\n            </Dropdown>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/games\">games</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Link to=\"/lists\">lists</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n      <Search\n        placeholder=\"search\"\n        onSearch={value => console.log(value)}\n        style={{ width: 200, right: '10px', top: '16px', position: \"absolute\" }}\n      />\n    </div>\n  );\n};\n\nexport default header;\n","import React, { Component } from 'react';\n\nexport default class FacebookLogin extends Component {\n\n  componentDidMount() {\n    document.addEventListener('FBObjectReady', this.initializeFacebookLogin);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('FBObjectReady', this.initializeFacebookLogin);\n  }\n\n  /**\n   * Init FB object and check Facebook Login status\n   */\n  initializeFacebookLogin = () => {\n    this.FB = window.FB;\n    this.checkLoginStatus();\n  }\n\n  /**\n   * Check login status\n   */\n  checkLoginStatus = () => {\n    this.FB.getLoginStatus(this.facebookLoginHandler);\n  }\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  facebookLogin = () => {\n    if (!this.FB) return;\n\n    this.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.facebookLoginHandler(response);\n      } else {\n        this.FB.login(this.facebookLoginHandler, {scope: 'public_profile'});\n      }\n    }, );\n  }\n\n  /**\n   * Handle login response\n   */\n  facebookLoginHandler = response => {\n    if (response.status === 'connected') {\n      this.FB.api('/me', userData => {\n        let result = {\n          ...response,\n          user: userData\n        };\n        this.props.onLogin(true, result);\n      });\n    } else {\n      this.props.onLogin(false);\n    }\n  }\n\n  render() {\n    let {children} = this.props;\n    return (\n      <div onClick={this.facebookLogin}>\n        {children}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { Layout, Button, Carousel } from \"antd\";\nimport axios from 'axios';\nimport FacebookLoginButton from \"./FacebookLoginButton\";\nimport config from '../config.json';\n\nconst { Content } = Layout;\n\nclass Home extends React.Component {\n\n  authenticate() {\n    axios.get(`${config.backend_url}/auth/facebook`)\n      .then((user) => {\n        console.log(user);\n      })\n  }\n\n  render() {\n    return (\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n        <div align=\"center\">\n          <Button onClick={ this.authenticate }>Login with Facebook</Button>\n        </div>\n      </Content>\n    );\n  }\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Affix, Avatar, Layout, Menu, Breadcrumb, Icon, Input } from \"antd\";\nimport { Link, BrowserRouter, withRouter } from \"react-router-dom\";\nimport config from '../config.json'\n\nconst { Search } = Input;\nconst { Content, Sider } = Layout;\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: [],\n      title: \"\"\n    };\n  }\n\n  connect() {\n     this.state.title = `Connect`;\n     fetch(`${config.backend_url}/messaging/connectSocketIO`)\n       .then(res => res.json())\n       .then(data => this.setState({ apiResponse: data }))\n       .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  inbox() {\n    this.state.title = `Inbox`;\n    fetch(`${config.backend_url}/messaging/inbox`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  getChat(partner) {\n     this.state.title = `Chat`;\n     fetch(`${config.backend_url}/messaging/getChatHistory?id=${partner}`)\n       .then(res => res.json())\n       .then(data => this.setState({ apiResponse: data }))\n       .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n     this.connect();\n     this.inbox();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout style={{ minHeight: \"90vh\" }}>\n          <Sider>\n            <Avatar size={64} icon=\"user\" />\n            {/* <Menu mode=\"inline\">\n              <Menu.Item key=\"1\">\n                <Link to=\"/profile\">\n                  <Icon type=\"cross\" />\n                  <span>Close Chat</span>\n                </Link>\n              </Menu.Item>\n              \n            </Menu> */}\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"4\"]}>\n              <Menu.Item key=\"1\">\n                <Icon type=\"export\" />\n                <span className=\"nav-text\">refer host</span>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Icon type=\"home\" />\n                <span className=\"nav-text\">reservations</span>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Icon type=\"upload\" />\n                <span className=\"nav-text\">inbox</span>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Icon type=\"user\" />\n                <span className=\"nav-text\">back to profile</span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Content style={{ margin: \"0 16px\" }}>\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\n                <Breadcrumb.Item>Inbox</Breadcrumb.Item>\n                <Breadcrumb.Item>User</Breadcrumb.Item>\n              </Breadcrumb>\n              <div style={{ padding: 24, background: \"#fff\", minHeight: 475 }}>\n                <div\n                  className=\"scrollable-container\"\n                  ref={node => {\n                    this.container = node;\n                  }}\n                >\n                  <div className=\"background\">\n                    <Affix target={() => this.container}></Affix>\n                  </div>\n                </div>\n              </div>\n              <Search\n                size=\"large\"\n                enterButton=\"Send\"\n                onSearch={value => console.log(value)}\n              />\n            </Content>\n          </Layout>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Messages;\n","import React from 'react';\nimport {\n    Menu,\n    Icon,\n    Layout,\n    Typography,\n    Card,\n    Carousel,\n    Empty,\n    Modal,\n    Avatar,\n    Form,\n    Upload,\n    Button,\n} from 'antd';\nimport 'antd/dist/antd.css';\nimport { Link, BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport './Profile.css';\nimport config from '../config.json';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nextHosting = this.nextHosting.bind(this);\n        this.prevHosting = this.prevHosting.bind(this);\n        this.nextFavorites = this.nextFavorites.bind(this);\n        this.prevFavorites = this.prevFavorites.bind(this);\n        this.setNewProfilePicture = this.setNewProfilePicture.bind(this);\n        const values = queryString.parse(props.location.search);\n        this.state.userId = values.id;\n        this.carouselHosting = React.createRef();\n        this.carouselFavorites = React.createRef();\n    }\n\n    state = {\n        userId: null,\n        isProfileOwner: true,\n        currMenu: 'profile',\n        showProfileModal: false,\n        confirmProfileModalLoading: false,\n    };\n\n    componentDidMount() {\n        this.getUserInfo()\n            .then((userInfo) => {\n                this.setState({ userInfo: userInfo.data });\n                // this.setState({ isProfileOwner: userInfo.data.id == this.props.user.id })  check if the profile belongs to the current user. \n            })\n            .then(() => {\n                this.getGameList('hosting');  // NOT TEST\n                //this.getGameList('testing');    // TEST\n            })\n            .then(() => {\n                this.getGameList('favorites'); // NOT TEST\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n    }\n\n    nextHosting() {\n        this.carouselHosting.next();\n    }\n\n    prevHosting() {\n        this.carouselHosting.prev();\n    }\n\n    nextFavorites() {\n        this.carouselFavorites.next();\n    }\n\n    prevFavorites() {\n        this.carouselFavorites.prev();\n    }\n\n    getUserInfo() {\n        return axios({ \n                url: `${config.backend_url}/profile/getProfileUserInformation?id=${this.state.userId}&private=false`,\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Accept': 'application/json'\n                }\n            })\n    }\n\n    handleMenuClick = event => {\n        this.setState({ currMenu: event.key });\n    }\n\n    onUsernameEdit = async (username) => {\n        const userInfo = { ...this.state.userInfo, username }\n        this.setState({ userInfo });\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    onBioEdit = async (bio) => {\n        const userInfo = { ...this.state.userInfo, bio }\n        this.setState({ userInfo });\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    removeCard = async (type, id) => {\n        console.log('removing card');\n        let removeInd;\n        const removedType = this.state.userInfo[type].filter((val, ind, arr) => {\n            if (val !== id.toString()) {\n                return true\n            } else {\n                removeInd = ind;\n                return false;\n            }\n        });\n        const gameInfo = this.state[type];\n        gameInfo.splice(2 * removeInd, 2);\n        const userInfo = { ...this.state.userInfo }\n        userInfo[type] = removedType;\n        console.log(removedType);\n        this.setState({ userInfo, [type]: gameInfo });\n        // TODO: UPDATE THE DB\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    openProfileModal = () => {\n        this.setState({ showProfileModal: true });\n    }\n\n    handleProfileModalOk = async (e) => {\n        this.setState({ confirmProfileModalLoading: true });\n        e.preventDefault();\n        console.log('handleok')\n        if (!this.state.newProfilePicture) {\n            this.setState({ showProfileModal: false });\n        } else {\n            const formData = new FormData();\n            formData.append('myImage', this.state.newProfilePicture);\n            this.setState({ newProfilePicture: undefined });\n            const header = {\n                headers: {\n                    'content-type': 'multipart/form-data',\n                }\n            }\n            axios.post(`${config.backend_url}/profile/editProfilePicture`, formData, header)\n                .then((url) => {\n                    const userInfo = { ...this.state.userInfo, profilePicture: url }\n                    this.setState({ userInfo, confirmProfileModalLoading: false, showProfileModal: false });\n                });\n        }\n    }\n\n    handleProfileModalCancel = () => {\n        this.setState({ showProfileModal: false });\n    }\n\n    getGameList = async (type) => {\n        if (!this.state.userInfo || !this.state.userInfo[type]) {   // TEST:  if (!this.state.userInfo || !this.state.userInfo[type])\n            return <Empty />;\n        }\n        // BEGIN TEST\n        /*\n        if (type == 'testing') {\n            const games_list = [\n                { data: { id: \"90101\", name: 'dog dog dog dog dog dog dog dog asdfadfasdfadfadfa' } },\n                { data: 'hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gettyimages-1094874726.png?crop=0.542xw:0.814xh;0.0472xw,0.127xh&resize=640:*'},\n                { data: { id: 1234, name: 'dog dog' } },\n                { data: 'hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gettyimages-1094874726.png?crop=0.542xw:0.814xh;0.0472xw,0.127xh&resize=640:*'},\n                { data: { id: 1235 } },\n                { data: 'hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gettyimages-1094874726.png?crop=0.542xw:0.814xh;0.0472xw,0.127xh&resize=640:*'},\n                { data: { id: 1236 } },\n                { data: 'hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gettyimages-1094874726.png?crop=0.542xw:0.814xh;0.0472xw,0.127xh&resize=640:*'},\n                { data: { id: 1237 } },\n                { data: 'hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gettyimages-1094874726.png?crop=0.542xw:0.814xh;0.0472xw,0.127xh&resize=640:*'},\n                { data: { id: 1238 } },\n                { data: 'hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gettyimages-1094874726.png?crop=0.542xw:0.814xh;0.0472xw,0.127xh&resize=640:*'},\n            ]\n            this.setState({ 'testing' : games_list })\n            return;\n        }\n        */\n        // END TEST\n        const idList = this.state.userInfo[type];\n        const InfoPromises = [];\n        for (let i = 0; i < idList.length; i += 1) {\n            const gameReq = axios.get(`${config.backend_url}/igdb/game?id=${idList[i]}`);\n            const coverReq = axios.get(`${config.backend_url}/igdb/cover?id=${idList[i]}`);\n            InfoPromises.push(gameReq, coverReq);\n        }\n        const gameInfo = await Promise.all(InfoPromises);\n        type === 'hosting' ? this.setState({ 'hosting': gameInfo }) : this.setState({ 'favorites': gameInfo });\n    }\n\n    setNewProfilePicture = ({ file, onSuccess}) => {\n        this.setState({ newProfilePicture: file })\n        console.log(this.state.newProfilePicture)\n        setTimeout(() => {\n            onSuccess('ok');\n        }, 0);\n    }\n\n    handleUploadChange = info => {\n        let fileList = [info.fileList];\n        this.setState({ fileList: fileList[0] });\n    }\n\n    render() {\n        let createCards = (type) => {\n            console.log('creatingCards')\n            const gameInfo = this.state[type];\n            if (!gameInfo) return;\n            const cards = [];\n            for (let i = 0; i < gameInfo.length; i += 2) {\n                cards.push(\n                    <div className=\"card\">\n                        <Link to={`/singlegame/?id=${gameInfo[i].data.id}`}>\n                            <img src={\"http://\" + gameInfo[i+1].data} />\n                        </Link>\n                        <div className=\"name-text-box\">\n                            <a className=\"name-text\">{gameInfo[i].data.name}</a>\n                            <br/>\n                            { this.state.isProfileOwner && \n                                <Text className='name-text' style={{ cursor: 'pointer' }}onClick={ () => { this.removeCard(type, gameInfo[i].data.id) }}>Remove</Text>\n                            }\n                        </div>\n                    </div>\n                )\n            }\n            return cards;\n        }\n        //const hostingCards = createCards('testing') || [];      // TEST\n        // const favoritesCards = createCards('testing') || [];    // TEST\n        const hostingCards = createCards('hosting') || [];   // NOT TEST\n        const favoritesCards = createCards('favorites') || [];  // NOT TEST\n        const props = {\n            dots: true,\n            speed: 500,\n            circular: false,\n            slidesToScroll: 4\n        };\n        return (\n            <div id='main'>\n                <Modal \n                    title='Change Profile Picture' \n                    visible={this.state.showProfileModal}\n                    confirmLoading={this.state.confirmProfileModalLoading}\n                    onCancel={this.handleProfileModalCancel}\n                    footer={[\n                        <Button key='cancel' onClick={this.handleProfileModalCancel}>Cancel</Button>,\n                        <Button key='submit' form='profile-form' htmlType='submit'>Ok</Button>\n                    ]}\n                >\n                    <form id='profile-form' onSubmit={this.handleProfileModalOk}>\n                        <Upload.Dragger \n                            name='file' \n                            multiple={false} \n                            customRequest={this.setNewProfilePicture} \n                            onChange={this.handleUploadChange}\n                            accept='image/*'\n                            fileList={this.state.fileList}>\n                        <p className=\"ant-upload-text\">Click or drag a picture</p>\n                        </Upload.Dragger>\n                    </form>\n                </Modal>\n                <div className='user_info'>\n                    { this.state.userInfo && this.state.userInfo.profilePicture && \n                        <div>\n                            <img className='profile_image' src={ this.state.userInfo.profilePicture } />\n                            { this.state.isProfileOwner &&\n                                <Text id='change_profile_pic' onClick={this.openProfileModal}>Change Profile Picture</Text>\n                            }\n                        </div>\n                        }\n                    { !this.state.userInfo && <Icon style={{ fontSize: '150px' }} type=\"user\" />}\n                    <div id='name_and_loc'>\n                        <div id='name'>\n                            { (this.state.userInfo && this.state.userInfo.username) && (this.state.isProfileOwner \n                                ? <Title editable={{ onChange: this.onUsernameEdit }}>{ this.state.userInfo.username }</Title>\n                                : <Title>{ this.state.userInfo.username }</Title>)\n                            }\n                        </div>\n                        <div id='loc'>\n                            \n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div id='hosting'>\n                    <Title level={2}>Games Hosting</Title>\n                    <hr />\n                    <div className='games_list'>\n                        <div className='games_list_children'>\n                            <div className='games_list_carousel'>\n                                <Carousel ref={ node => (this.carouselHosting = node) } { ...props } slidesToShow={ Math.min(4, hostingCards.length) } >\n                                    { hostingCards }\n                                </Carousel>\n                            </div>\n                            <br />\n                            <div className='scroll-group'>\n                                <Icon type='left-circle' className='scroll' onClick={ this.prevHosting } />\n                                <Icon type='right-circle' className='scroll' onClick={ this.nextHosting } />\n                            </div>\n                        </div>\n                    </div>\n                    <Title level={2}>Favorites</Title>\n                    <hr />\n                    <div className='games_list'>\n                        <div className='games_list_children'>\n                            <div className='games_list_carousel'>\n                                <Carousel ref={ node => (this.carouselFavorites = node) } { ...props } slidesToShow={ Math.min(4, favoritesCards.length) } >\n                                    { favoritesCards }\n                                </Carousel>\n                            </div>\n                            <br/>\n                            <div className='scroll-group'>\n                                <Icon type='left-circle' className='scroll' onClick={ this.prevFavorites } />\n                                <Icon type='right-circle' className='scroll' onClick={ this.nextFavorites } /> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id='bio'>\n                    <div id='bio_title'>\n                        <Title level={3}>bio</Title>\n                    </div>\n                    <div id='bio_info'>\n                        { (this.state.userInfo && this.state.userInfo.bio) && ( this.state.isProfileOwner\n                            ? <Paragraph ellipsis={{ rows: 5, expandable: true }} editable={{ onChange: this.onBioEdit }}>{ this.state.userInfo.bio }</Paragraph>\n                            : <Paragraph ellipsis={{ rows: 5, expandable: true }}>{ this.state.userInfo.bio }</Paragraph>)\n                        }\n                    </div>\n                    <Link to={ `/messages?id=${ this.state.userId }` }><Title level={3}><Icon type=\"mail\" /> Message this host</Title></Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from \"react\";\nimport {\n  Menu,\n  Icon,\n  Input,\n  Dropdown,\n  Row,\n  Col,\n  Typography,\n  Layout,\n  Button,\n  Carousel,\n  Avatar\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./Games.css\";\nimport config from '../config.json'\n\nconst { SubMenu } = Menu;\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\nclass Games extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n    this.limit = \"50\";\n    this.state = {\n      apiResponse: [],\n      title: \"\"\n    };\n  }\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  genre_filter = (\n    <Menu>\n      <SubMenu title=\"A-I\">\n        <Menu.Item onClick={() => this.genre(`adventure`)}>Adventure</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`arcade`)}>Arcade</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`fighting`)}>Fighting</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`hack-and-slash-beat-em-up`)}>\n          Hack-and-Slash / Beat-Em-Up\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`indie`)}>Indie</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"M-P\">\n        <Menu.Item onClick={() => this.genre(`music`)}>Music</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`pinball`)}>Pinball</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`platform`)}>Platform</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`point-and-click`)}>\n          Point-and-Click\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`puzzle`)}>Puzzle</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"Q-R\">\n        <Menu.Item onClick={() => this.genre(`quiz-trivia`)}>\n          Quiz / Trivia\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`racing`)}>Racing</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`real-time-strategy-rts`)}>\n          RTS\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`role-playing-rpg`)}>\n          RPG\n        </Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"S\">\n        <Menu.Item onClick={() => this.genre(`shooter`)}>Shooter</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`simulator`)}>Simulator</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`sport`)}>Sport</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`strategy`)}>Strategy</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"T-V\">\n        <Menu.Item onClick={() => this.genre(`tactical`)}>Tactical</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`turn-based-strategy-tbs`)}>\n          Turn-Based\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`visual-novel`)}>\n          Visual-Novel\n        </Menu.Item>\n      </SubMenu>\n    </Menu>\n  );\n\n  search(value) {\n    this.state.title = `Search for: \"${value}\"`;\n    fetch(`${config.backend_url}/igdb/search?title=${value}`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  popular() {\n    this.state.title = `Most Popular`;\n    fetch(`${config.backend_url}/igdb/popular?limit=${this.limit}`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  genre(value) {\n    this.state.title = `Genre: \"${value}\"`;\n    fetch(\n      `${config.backend_url}/igdb/searchbyGenre?genre=${value}&limit=${this.limit}`\n    )\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n    this.popular();\n  }\n\n  render() {\n    const props = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 6\n    };\n    return (\n      <div>\n        <br></br>\n        <Row>\n          <Col span={18}>\n            <div>\n              <Text>Browse By </Text>\n              <Button onClick={() => this.popular()}>popular</Button>\n              <Dropdown overlay={this.genre_filter}>\n                <Button>\n                  genre <Icon type=\"down\" />\n                </Button>\n              </Dropdown>\n            </div>\n          </Col>\n          <Col span={6}>\n            <Search\n              placeholder=\"Search by Name\"\n              onSearch={value => this.search(value)}\n            />\n          </Col>\n        </Row>\n        <br></br>\n        <Title>{this.state.title}</Title>\n        <Carousel\n          class=\"carousel\"\n          ref={node => (this.carousel = node)}\n          {...props}\n        >\n          {this.state.apiResponse.map(elem => {\n            return (\n              <div className=\"image-container\">\n                <Link to={`/singlegame/?id=${elem.id}`}>\n                  <img className=\"elem-image\" src={\"http://\" + elem.coverUrl} />\n                </Link>\n                <div className=\"name-text-box\">\n                  <p className=\"name-text\">{elem.name}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Carousel>\n          <Avatar className=\"arrow-left\" size=\"large\" icon=\"left-circle\" onClick={this.previous} /> \n          <Avatar className=\"arrow-right\" size=\"large\" icon=\"right-circle\" onClick={this.next} />\n        {/* <div></div> */}\n      </div>\n    );\n  }\n}\n\nexport default Games;\n","import React, { useDebugValue } from \"react\";\nimport {\n  Card,\n  Descriptions,\n  Tag,\n  Rate,\n  Icon,\n  Avatar,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Layout,\n  Input,\n  Carousel\n} from \"antd\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport FacebookLoginButton from \"./FacebookLoginButton\";\n\nimport \"./SingleGame.css\";\n\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\nclass SingleGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: {},\n      apiScreenshots: [],\n      apiAges: {},\n      apiDescription: {},\n      apiGenre: {},\n      apiPlatforms: {},\n      coverUrl: \"\",\n      descriptionFound: false\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n  }\n\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  convertDate(timestamp){\n    var ts = new Date(timestamp).toDateString().split(' ').slice(1).join(' ');\n    return ts;\n  }\n  onFacebookLogin(loginStatus, resultObject) {\n    // if (loginStatus === true) {\n    //   this.setState({\n    //     username: resultObject.user.name\n    //   });\n    // } else {\n    //   alert(\"Facebook login error\");\n    // }\n  }\n\n  getGame() {\n    var url =\n      `http://localhost:9000/igdb/game?id=` +\n      new URLSearchParams(window.location.search).get(\"id\");\n    fetch(url)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          apiResponse: data,\n          apiScreenshots: data.screenshots, // find a way to loop over all screenshots\n          apiAges: data.age_ratings[0][0],\n          apiGenre: data.genres[0][0], // find a way to loop over all genres so i can put in tags (use var i or something)\n          apiPlatforms: data.platforms[0][0],\n          \n        })\n      )\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  getDescription() {\n    var url =\n      `http://localhost:9000/igdb/game?id=` +\n      new URLSearchParams(window.location.search).get(\"id\");\n    fetch(url)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          apiDescription: data.age_ratings[1][0],\n          descriptionFound: true\n        })\n      )\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  cover() {\n    var url =\n      `http://localhost:9000/igdb/cover?id=` +\n      new URLSearchParams(window.location.search).get(\"id\");\n    fetch(url)\n      .then(res => res.text())\n      .then(data => this.setState({ coverUrl: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n    this.getGame();\n    this.getDescription();\n    this.cover();\n  }\n\n  render() {\n    const carouselProps = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n        <Content>\n          <Row>\n            <Col span={8} alignItems=\"top\">\n              <div class=\"container\">\n                <img\n                  height=\"375\"\n                  width=\"260\"\n                  src={\"http://\" + this.state.coverUrl}\n                />\n                <br />\n                <div class=\"small-container\">\n                  <Rate character={<Icon type=\"heart\" />} count={1} />\n                  {/* <Text> {this.state.apiResponse.rating}</Text> */}\n                  <Rate\n                    character={<Icon type=\"star\" />}\n                    allowHalf\n                    disabled\n                    defaultValue={4.5}\n                  />\n                </div>\n                <br />\n                <Card title=\"Where To Play\" style={{ width: 300 }}>\n                  <Avatar size=\"small\" icon=\"user\" />\n                  <Avatar size=\"small\" icon=\"user\" />\n                  <Avatar size=\"small\" icon=\"user\" />\n                  <br />\n                  <Link>My Hosts</Link>\n                  <br />\n                  <Link to={`/people`}>More Hosts</Link>\n                  {/* link to people page  */}\n                </Card>\n              </div>\n            </Col>\n            <Col span={8}>\n              <div class=\"container\">\n                <Title>{this.state.apiResponse.name}</Title>\n                <br />\n                  {(() => {\n                    if (this.state.descriptionFound) {\n                      return (\n                        <Text>\n                          {this.state.apiDescription.synopsis}\n                        </Text>\n                      )\n                   } else {\n                      return (\n                        <Text>\n                          No description found.\n                        </Text>\n                      )\n                    }\n                    })()}\n                <br />\n                <Title level={2}>Screencaps</Title>\n              </div>\n              <br />\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                  <Col span={2}><Avatar className=\"arrow-left\" icon=\"left-circle\" onClick={this.previous} /></Col>\n                  \n                <Col span={20}><Carousel\n                  class=\"carousel\"\n                  ref={node => (this.carousel = node)}\n                  {...carouselProps}\n        >       \n                {this.state.apiScreenshots.map(elem => {\n                  return (\n                  <div align=\"center\" className=\"carousel-container\">\n                    <img className=\"image-container\" src={\"http:\" + elem[0].url.replace(\"t_thumb\", \"t_720p\")} />\n                  </div>\n                  );\n                })}\n                </Carousel></Col>\n                <Col span={2}><Avatar className=\"arrow-right\" icon=\"right-circle\" onClick={this.next} /></Col>\n                </Row>\n            </Col>\n            <Col span={8}>\n              <div class=\"container\">\n                {/* if user is not logged in, show this button and link to the facebook*/}\n                <FacebookLoginButton onLogin={this.onFacebookLogin}>\n                  <Button>sign in to log, rate, or review</Button>\n                </FacebookLoginButton>\n                <br />\n                <Button>share</Button>\n                <br />\n                <Card title=\"Details\" style={{ width: 350 }}>\n                  <Descriptions>\n                    <Descriptions.Item label=\"platform\">\n                      {this.state.apiPlatforms.name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"version\">\n                      {this.state.apiPlatforms.versions}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"release date\">\n                      {this.convertDate(this.state.apiResponse.first_release_date * 1000)}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"rating\">\n                      {this.state.apiResponse.rating_count}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"suitable for\">\n                      {this.state.apiAges.synopsis}\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <div class=\"small-container\">\n                    <Tag>{this.state.apiGenre.name}</Tag>\n                    <Tag>Action</Tag>\n                    <Tag>Classics</Tag>\n                  </div>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n        </Content>\n    );\n  }\n}\n\nexport default SingleGame;\n","import React, { Component } from \"react\";\nimport { withRouter, Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Messages from \"./components/Messages\";\nimport Profile from \"./components/Profile\";\nimport Games from \"./components/Games\";\nimport SingleGame from \"./components/SingleGame\";\nimport axios from 'axios';\n\nimport config from './config.json';\n\nclass App extends Component {\n  state = {\n    user: \"test\" // Add more states and change this when linked with backend.\n  };\n\n  /**\n  componentDidMount() {\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n      .then((user) => {\n        this.setState({ user })\n        console.log(user);\n      })\n  }\n  */\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header user={this.state.user} />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/inbox\" component={Messages} />\n            <Route path=\"/games\" component={Games} />\n            <Route path=\"/singlegame\" component={SingleGame} />\n            <Route path='/profile' render={(props) => <Profile user={this.state.user} { ...props } /> } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}