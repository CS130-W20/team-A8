{"version":3,"sources":["components/Header.js","components/Home.js","components/Messages.js","components/addInfoForm.js","components/Profile.js","components/Games.js","components/Hosts.js","components/SingleGame.js","components/FacebookLoginButton.js","App.js","serviceWorker.js","index.js"],"names":["Search","Title","header","props","console","log","user","pmenu","Item","to","_id","undefined","style","width","backgroundColor","float","color","position","left","top","level","theme","mode","lineHeight","align","key","type","overlay","className","onClick","e","preventDefault","placeholder","onSearch","value","right","Content","Home","Text","axios","get","config","backend_url","then","setUser","this","padding","marginTop","href","React","Component","TextArea","Sider","Messages","onReceiveMessage","a","state","userID","title","post","showModal","setState","visible","handleOk","handleCancel","onChange","message","target","handleEnter","onSendMessage","apiResponse","messages","username","partner","socket","io","on","data","addMessage","sendMessage","msg","emit","author","fetch","res","json","catch","err","m","firstName","body_","JSON","stringify","userID1","userID2","method","headers","Accept","body","connect","inbox","loading","minHeight","size","icon","defaultSelectedKeys","margin","background","ref","node","container","map","elem","hoverable","name","getChat","id","onOk","onCancel","footer","enterButton","onPressEnter","AddInfoForm","handleAdditionalInfoOk","form","validateFields","values","setAddInfo","addr1","addr2","city","zip","getFieldDecorator","address","split","length","onSubmit","label","rules","required","initialValue","bio","rows","htmlType","WrappedForm","create","Paragraph","Profile","userId","isProfileOwner","showProfileModal","showAdditionalInfoModal","onUsernameEdit","userInfo","error","onBioEdit","removeCard","removedType","filter","val","ind","arr","toString","removeInd","gameInfo","splice","openProfileModal","openAdditionalInfoModal","closeAdditionalInfoModal","handleProfileModalCancel","handleProfileModalOk","newProfilePicture","formData","FormData","append","url","vals","getGameList","idList","InfoPromises","i","gameReq","coverReq","push","Promise","all","setNewProfilePicture","file","onSuccess","setTimeout","handleUploadChange","info","fileList","nextHosting","bind","prevHosting","nextFavorites","prevFavorites","queryString","parse","location","search","carouselHosting","createRef","carouselFavorites","latitude","longitude","distance","next","prev","createCards","cards","src","cursor","hostingCards","favoritesCards","dots","speed","circular","slidesToScroll","Dragger","multiple","customRequest","accept","profilePicture","fontSize","editable","slidesToShow","Math","min","ellipsis","expandable","SubMenu","Games","genre_filter","genre","previous","carousel","limit","popular","span","class","infinite","coverUrl","Hosts","getHostList","loc","HostPromises","hostReq","hostInfo","hosts","hosting","favorites","hostCards","createHostCards","createGameCards","require","SingleGame","hostGame","gid","params","warn","operation","unhostGame","favorite","liked","apiScreenshots","apiAges","apiGenre","apiPlatforms","likes","userHosting","userFavorites","timestamp","Date","toDateString","slice","join","screenshots","age_ratings","genres","platforms","text","checkHost","checkFavorite","getHosts","indexOf","initialize","getGame","cover","alignItems","height","character","count","disabled","summary","justify","replace","versions","convertDate","first_release_date","rating_count","synopsis","App","Header","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bafe173.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Avatar, Menu, Input, Typography, Icon, Dropdown } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Search } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst header = props => {\r\n  console.log(props.user);\r\n  const pmenu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Link to=\"/people\">hosts</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to={`/profile?id=${props.user ? props.user._id : undefined}`}>profile</Link>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to=\"/inbox\">inbox</Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", backgroundColor: \"#041527\" }}>\r\n      <div style={{ width: \"calc(100% - 250px)\" }}>\r\n        <Title\r\n          style={{\r\n            float: \"left\",\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            left: \"10px\",\r\n            top: \"16px\"\r\n          }}\r\n          level={4}\r\n        >\r\n          GAMELINKS\r\n        </Title>\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          //   defaultSelectedKeys={[\"0\"]}\r\n          style={{ lineHeight: \"64px\" }}\r\n          align=\"right\"\r\n        >\r\n          {/* <Menu.Item key=\"test\">\r\n          <Link to=\"/messages\">\r\n            Messages (Test)\r\n          </Link>\r\n        </Menu.Item> */}\r\n          <Menu.Item key=\"0\">\r\n            <Link to=\"/\">\r\n              <Icon type=\"home\" />\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <Dropdown overlay={pmenu}>\r\n              <a\r\n                className=\"ant-dropdown-link\"\r\n                onClick={e => e.preventDefault()}\r\n              >\r\n                people\r\n                <Icon type=\"down\" />\r\n              </a>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Link to=\"/games\">games</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <Link to=\"/lists\">lists</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n      <Search\r\n        placeholder=\"search\"\r\n        onSearch={value => console.log(value)}\r\n        style={{ width: 200, right: \"10px\", top: \"16px\", position: \"absolute\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport { Typography, Layout, Button, Carousel } from \"antd\";\r\nimport config from \"../config.json\";\r\nimport axios from 'axios';\r\n\r\nconst { Content } = Layout;\r\nconst { Title, Text } = Typography;\r\n\r\nclass Home extends React.Component {\r\n\r\n  componentDidMount() {\r\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\r\n      .then((user) => {\r\n        if (!user) {\r\n          this.props.setUser(null);\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.user);\r\n    return (\r\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\r\n        <Title type=\"secondary\">show off your stats.</Title>\r\n        <br />\r\n        <Title type=\"secondary\">connect and join with hosts.</Title>\r\n        <br /> <Title type=\"secondary\">share what's good.</Title>\r\n        <br />\r\n        <div align=\"center\">\r\n          { this.props.user\r\n            ? <a href={`${config.backend_url}/auth/logout`}>\r\n                <Button>Log Out</Button>\r\n              </a>\r\n            : <a href={`${config.backend_url}/auth/facebook`}>\r\n                <Button>Log in with Facebook</Button>\r\n              </a>\r\n          }\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  Affix,\r\n  Avatar,\r\n  Layout,\r\n  Menu,\r\n  Breadcrumb,\r\n  Icon,\r\n  Input,\r\n  Card,\r\n  Button,\r\n  Modal,\r\n  List\r\n} from \"antd\";\r\nimport { Link, BrowserRouter, withRouter } from \"react-router-dom\";\r\nimport config from \"../config.json\";\r\n// diff package\r\nimport io from \"socket.io-client\";\r\nimport { Socket, Event } from \"react-socket-io\";\r\nimport axios from \"axios\";\r\n\r\nconst { Search, TextArea } = Input;\r\nconst { Content, Sider } = Layout;\r\n\r\nconst uri = \"http://localhost:9000\";\r\nconst options = { transports: [\"websocket\"] };\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiResponse: [],\r\n      messages: [],\r\n      message: \"\",\r\n      username: \"\",\r\n      partner: \"\",\r\n      title: \"\",\r\n      visible: false\r\n    };\r\n\r\n    this.socket = io(\"localhost:9000\");\r\n\r\n    this.socket.on(\"RECEIVE_MESSAGE\", function(data) {\r\n      this.addMessage(data);\r\n    });\r\n\r\n    this.addMessage = data => {\r\n      console.log('In add message');\r\n      console.log(data);\r\n      this.setState({ messages: [...this.state.messages, data] });\r\n      console.log(this.state.messages);\r\n    };\r\n\r\n    this.sendMessage = msg => {\r\n      console.log('Sending message');\r\n      this.setState({ partner: \"5e62c499cb2728634289d6ab\" });\r\n      // ev.preventDefault();\r\n      // this.setState({ message: msg })\r\n      this.socket.emit(\"SEND_MESSAGE\", {\r\n        author: this.state.username,\r\n        user: this.state.partner,\r\n        message: msg\r\n      });\r\n      // this.setState({ message: \"\" });\r\n    };\r\n  }\r\n\r\n  connect() {\r\n    this.state.title = `Connect`;\r\n    fetch(`${config.backend_url}/messaging/connectSocketIO`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ apiResponse: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  inbox() {\r\n    this.state.title = `Inbox`;\r\n    fetch(`${config.backend_url}/messaging/inbox`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ apiResponse: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  getChat(partner) {\r\n    this.state.title = `Chat`;\r\n    return fetch(`${config.backend_url}/messaging/getChatHistory?id=${partner}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ messages: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n\r\n  onSendMessage(value) {\r\n    const m = {author: this.props.user.firstName, user: this.state.partner, message: value};\r\n    this.addMessage(m);\r\n    this.sendMessage(value);\r\n\r\n    // const messageInfo = { ...this.state.userID1, userID2, history };\r\n    this.state.title = `Send Message`;\r\n    console.log(\"In onSendMessage\");\r\n    console.log(value);\r\n    // replace with messageIndo\r\n    var body_ = JSON.stringify({\r\n      userID1: this.props.user._id, // Replace this with current user id\r\n      userID2: \"5e62c499cb2728634289d6ab\", // Replace this with chat partner id\r\n      message: m\r\n    });\r\n    console.log(body_);\r\n    fetch(`${config.backend_url}/messaging/addToChatHistory`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: body_\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ apiResponse: data }))\r\n      .catch(err => console.log(`Error is ${err}`));\r\n    // clear the message\r\n  }\r\n\r\n  onReceiveMessage = async value => {\r\n    const messageInfo = { ...this.state.userID, value };\r\n    this.state.title = `Receive Message`;\r\n    await axios.post(`${config.backend_url}/messaging/addToChatHistory`, value);\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  // send dm\r\n  handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  // exit messaging modal\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n    this.inbox();\r\n    // connect w axios\r\n  }\r\n\r\n  onChange = (e) => {\r\n     this.setState({ message: e.target.value });\r\n  }\r\n\r\n  handleEnter = (e) => {\r\n    this.onSendMessage(this.state.message);\r\n    this.setState({ message: '' }); \r\n  }\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        {/* <Socket uri={uri} options={options}>\r\n          {this.props}\r\n        </Socket> */}\r\n        <Layout style={{ minHeight: \"90vh\" }}>\r\n          <Sider>\r\n            <Avatar size={64} icon=\"user\" />\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"3\"]}>\r\n              <Menu.Item key=\"1\">\r\n                <Icon type=\"export\" />\r\n                <span className=\"nav-text\">refer host</span>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <Icon type=\"home\" />\r\n                <span className=\"nav-text\">reservations</span>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\">\r\n                <Icon type=\"upload\" />\r\n                <span className=\"nav-text\">inbox</span>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\">\r\n                <Link to={`/profile#/profile?id=undefined`}>\r\n                  <Icon type=\"user\" />\r\n                  back to profile\r\n                </Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n            <Content style={{ margin: \"0 16px\" }}>\r\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n                <Breadcrumb.Item>Inbox</Breadcrumb.Item>\r\n                <Breadcrumb.Item>User</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div style={{ padding: 24, background: \"#fff\", minHeight: 475 }}>\r\n                <div\r\n                  className=\"scrollable-container\"\r\n                  ref={node => {\r\n                    this.container = node;\r\n                  }}\r\n                >\r\n                  {/* have a pop up modal with text area and messaging */}\r\n                  {this.state.apiResponse.map(elem => {\r\n                    return (\r\n                      <div className=\"p1\">\r\n                        <Card hoverable title={elem.name}>\r\n                          <Button size=\"large\" onClick={() => {\r\n                             this.showModal();\r\n                             this.getChat(elem.id);\r\n                          }}>\r\n                            Message\r\n                          </Button>\r\n                        </Card>\r\n                        <Modal\r\n                          visible={this.state.visible}\r\n                          title={elem.name}\r\n                          onOk={this.handleOk}\r\n                          onCancel={this.handleCancel}\r\n                          footer={[\r\n                            <Button key=\"back\" onClick={this.handleCancel}>\r\n                              Return\r\n                            </Button>\r\n                          ]}\r\n                        >\r\n                          <List size=\"large\">\r\n                            {this.state.messages.map(message => {\r\n                                return (\r\n                                  <div>\r\n                                     {message.author}: {message.message}\r\n                                  </div>\r\n                                );\r\n                             })\r\n                           }\r\n                          </List>\r\n                          <Search\r\n                            size=\"large\"\r\n                            placeholder=\"Enter here\"\r\n                            value={this.state.message || ''}\r\n                            enterButton=\"Send\"\r\n                            onChange={this.onChange}\r\n                            onPressEnter={this.handleEnter}\r\n                          />\r\n                        </Modal>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { Form, Button, Input } from 'antd';\r\n\r\nclass AddInfoForm extends React.Component {\r\n    handleAdditionalInfoOk = async (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.props.setAddInfo(values);\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const address = this.props.user.address ? this.props.user.address.split(',') : ['', '', '', '', ''];\r\n        let addr1, addr2, city, state, zip;\r\n        if (address.length == 5) {\r\n            [addr1, addr2, city, state, zip] = address;\r\n        } else {\r\n            [addr1, city, state, zip] = address;\r\n        }\r\n        return (\r\n            <Form name='addInfo-form' onSubmit={this.handleAdditionalInfoOk}>\r\n                <Form.Item label='Username'>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{required: true, message: 'Please input your username'}],\r\n                        initialValue: this.props.user.username,\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label='Address Line 1'>\r\n                    {getFieldDecorator('addr1', {\r\n                        rules: [{required: true, message: 'Please input an Address'}],\r\n                        initialValue: addr1,\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label='Address Line 2'>\r\n                    {getFieldDecorator('addr2', {\r\n                        initialValue: addr2,\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label='City'>\r\n                    {getFieldDecorator('city', {\r\n                        rules: [{required: true, message: 'Please input a city'}],\r\n                        initialValue: city,\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label='State'>\r\n                    {getFieldDecorator('state', {\r\n                        rules: [{required: true, message: 'Please input a state'}],\r\n                        initialValue: state,\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label='Zip Code'>\r\n                    {getFieldDecorator('zip', {\r\n                        rules: [{required: true, message: 'Please input a zip code'}],\r\n                        initialValue: zip,\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label='Bio'>\r\n                    {getFieldDecorator('bio', {\r\n                        rules: [{required: true, message: 'Please write a short description about yourself'}],\r\n                        initialValue: this.props.user.bio,\r\n                    })(\r\n                        <Input.TextArea rows={4} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>Ok</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedForm = Form.create({ name: 'addInfoForm' })(AddInfoForm);\r\nexport default WrappedForm;\r\n","import React from 'react';\r\nimport {\r\n    Icon,\r\n    Layout,\r\n    Typography,\r\n    Carousel,\r\n    Empty,\r\n    Modal,\r\n    Upload,\r\n    Button,\r\n    message,\r\n} from 'antd';\r\nimport AddInfoForm from './addInfoForm';\r\nimport { Link, BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\nimport config from '../config.json';\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Content } = Layout;\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextHosting = this.nextHosting.bind(this);\r\n        this.prevHosting = this.prevHosting.bind(this);\r\n        this.nextFavorites = this.nextFavorites.bind(this);\r\n        this.prevFavorites = this.prevFavorites.bind(this);\r\n        this.setNewProfilePicture = this.setNewProfilePicture.bind(this);\r\n        const values = queryString.parse(props.location.search);\r\n        this.state.userId = values.id;\r\n        this.carouselHosting = React.createRef();\r\n        this.carouselFavorites = React.createRef();\r\n        console.log(props);\r\n    }\r\n\r\n    state = {\r\n        userId: null,\r\n        isProfileOwner: false,\r\n        showProfileModal: false,\r\n        showAdditionalInfoModal: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\r\n            .then((user) => {\r\n                console.log(user);\r\n                this.props.setUser(user.data);\r\n            })\r\n            .then(() => {\r\n                return axios({ \r\n                    url: `${config.backend_url}/profile/getProfileUserInformation?id=${this.state.userId}`,\r\n                    method: 'GET',\r\n                })\r\n            })\r\n            .then((userInfo) => {\r\n                this.setState({ userInfo: userInfo.data });\r\n                if (this.props.user) {\r\n                    this.setState({ isProfileOwner: userInfo.data._id === this.props.user._id })  // check if the profile belongs to the current user.\r\n                    if (this.props.user.latitude && this.props.user.longitude) {\r\n                        return axios({\r\n                            url: `${config.backend_url}/profile/distance?lat=${this.props.user.latitude}&long=${this.props.user.longitude}`,\r\n                            method: 'GET'\r\n                        })\r\n                    }\r\n                }\r\n                return null;\r\n            })\r\n            .then((distance) => {\r\n                if (distance) {\r\n                    this.setState({ distance: distance.data.distance.toString() });\r\n                }\r\n            })\r\n            .then(() => { // TODO: add or condition once we figure out if they shared their private info\r\n                console.log(this.state.userInfo)\r\n                if (this.state.isProfileOwner && (!this.state.userInfo.username || !this.state.userInfo.bio || (!this.state.userInfo.address && !this.state.userInfo.city))) {\r\n                    this.setState({ showAdditionalInfoModal: true })\r\n                }\r\n            })\r\n            .then(() => {\r\n                this.getGameList('hosting');\r\n            })\r\n            .then(() => {\r\n                this.getGameList('favorites');\r\n                console.log(this.state)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            });\r\n\r\n    }\r\n\r\n    nextHosting() {\r\n        this.carouselHosting.next();\r\n    }\r\n\r\n    prevHosting() {\r\n        this.carouselHosting.prev();\r\n    }\r\n\r\n    nextFavorites() {\r\n        this.carouselFavorites.next();\r\n    }\r\n\r\n    prevFavorites() {\r\n        this.carouselFavorites.prev();\r\n    }\r\n\r\n    // TODO: fix this part\r\n    onUsernameEdit = (username) => {\r\n        const userInfo = { ...this.state.userInfo, username }\r\n        axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\r\n            .then(res => {\r\n                this.setState({ userInfo });\r\n            })\r\n            .catch(err => {\r\n                message.error('A user with this username already exists. Please choose another.')\r\n            })\r\n    }\r\n\r\n    onBioEdit = async (bio) => {\r\n        const userInfo = { ...this.state.userInfo, bio }\r\n        this.setState({ userInfo });\r\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\r\n    }\r\n\r\n    removeCard = async (type, id) => {\r\n        console.log('removing card');\r\n        let removeInd;\r\n        const removedType = this.state.userInfo[type].filter((val, ind, arr) => {\r\n            if (val !== id.toString()) {\r\n                return true\r\n            } else {\r\n                removeInd = ind;\r\n                return false;\r\n            }\r\n        });\r\n        const gameInfo = this.state[type];\r\n        gameInfo.splice(2 * removeInd, 2);\r\n        const userInfo = { ...this.state.userInfo }\r\n        userInfo[type] = removedType;\r\n        console.log(removedType);\r\n        this.setState({ userInfo, [type]: gameInfo });\r\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\r\n    }\r\n\r\n    openProfileModal = () => {\r\n        this.setState({ showProfileModal: true });\r\n    }\r\n\r\n    openAdditionalInfoModal = () => {\r\n        this.setState({ showAdditionalInfoModal: true });\r\n    }\r\n\r\n    closeAdditionalInfoModal = () => {\r\n        this.setState({ showAdditionalInfoModal: false });\r\n    }\r\n\r\n    handleProfileModalCancel = () => {\r\n        this.setState({ showProfileModal: false });\r\n    }\r\n\r\n    handleProfileModalOk = async (e) => {\r\n        e.preventDefault();\r\n        console.log('handleok')\r\n        if (!this.state.newProfilePicture) {\r\n            this.setState({ showProfileModal: false });\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append('myImage', this.state.newProfilePicture);\r\n            this.setState({ newProfilePicture: undefined });\r\n            const header = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                }\r\n            }\r\n            axios.post(`${config.backend_url}/profile/editProfilePicture`, formData, header)\r\n                .then((url) => {\r\n                    this.setState({ showProfileModal: false });\r\n                });\r\n        }\r\n    }\r\n\r\n    setAddInfo = async (vals) => {\r\n        console.log(vals);\r\n        const { username, addr1, addr2, city, state, zip, bio } = vals;\r\n        const address = addr2 ? `${addr1}, ${addr2}, ${city}, ${state}, ${zip}` : `${addr1}, ${city}, ${state}, ${zip}`;\r\n        const userInfo = { ...this.state.userInfo, address, username, city, bio };\r\n        axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\r\n            .then(() => {\r\n                this.setState({ userInfo, showAdditionalInfoModal: false });\r\n            })\r\n            .catch(() => {\r\n                message.error('A user with this username already exists. Please choose another.');\r\n            })\r\n    }\r\n\r\n    getGameList = async (type) => {\r\n        if (!this.state.userInfo || !this.state.userInfo[type]) {   // TEST:  if (!this.state.userInfo || !this.state.userInfo[type])\r\n            return <Empty />;\r\n        }\r\n        const idList = this.state.userInfo[type];\r\n        const InfoPromises = [];\r\n        for (let i = 0; i < idList.length; i += 1) {\r\n            const gameReq = axios.get(`${config.backend_url}/igdb/game?id=${idList[i]}`);\r\n            const coverReq = axios.get(`${config.backend_url}/igdb/cover?id=${idList[i]}`);\r\n            InfoPromises.push(gameReq, coverReq);\r\n        }\r\n        const gameInfo = await Promise.all(InfoPromises);\r\n        type === 'hosting' ? this.setState({ 'hosting': gameInfo }) : this.setState({ 'favorites': gameInfo });\r\n    }\r\n\r\n    setNewProfilePicture = ({ file, onSuccess}) => {\r\n        this.setState({ newProfilePicture: file })\r\n        console.log(this.state.newProfilePicture)\r\n        setTimeout(() => {\r\n            onSuccess('ok');\r\n        }, 0);\r\n    }\r\n\r\n    handleUploadChange = info => {\r\n        let fileList = [info.fileList];\r\n        this.setState({ fileList: fileList[0] });\r\n    }\r\n\r\n    render() {\r\n        let createCards = (type) => {\r\n            console.log('creatingCards')\r\n            const gameInfo = this.state[type];\r\n            if (!gameInfo) return;\r\n            const cards = [];\r\n            for (let i = 0; i < gameInfo.length; i += 2) {\r\n                cards.push(\r\n                    <div className=\"card\" key={i}>\r\n                        <Link to={`/singlegame/?id=${gameInfo[i].data.id}`}>\r\n                            <img src={\"http://\" + gameInfo[i+1].data} />\r\n                        </Link>\r\n                        <div className=\"name-text-box\">\r\n                            <span className=\"name-text\">{gameInfo[i].data.name}</span>\r\n                            <br/>\r\n                            { this.state.isProfileOwner && \r\n                                <Text className='name-text' style={{ cursor: 'pointer' }}onClick={ () => { this.removeCard(type, gameInfo[i].data.id) }}>Remove</Text>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return cards;\r\n        }\r\n        //const hostingCards = createCards('testing') || [];      // TEST\r\n        // const favoritesCards = createCards('testing') || [];    // TEST\r\n        const hostingCards = createCards('hosting') || [];   // NOT TEST\r\n        const favoritesCards = createCards('favorites') || [];  // NOT TEST\r\n        const props = {\r\n            dots: true,\r\n            speed: 500,\r\n            circular: false,\r\n            slidesToScroll: 4\r\n        };\r\n        return (\r\n            <div id='main'>\r\n                <Modal\r\n                    title='Please add some additional Information'\r\n                    visible={this.state.showAdditionalInfoModal}\r\n                    footer={[]}\r\n                >\r\n                    <Text>Other users will only be able to see the City you are in. You can choose to share your full address with other users.</Text>\r\n                    <AddInfoForm setAddInfo={this.setAddInfo} user={this.props.user} />\r\n                </Modal>\r\n                <Modal \r\n                    title='Change Profile Picture' \r\n                    visible={this.state.showProfileModal}\r\n                    onCancel={this.handleProfileModalCancel}\r\n                    footer={[\r\n                        <Button key='cancel' onClick={this.handleProfileModalCancel}>Cancel</Button>,\r\n                        <Button key='submit' form='profile-form' htmlType='submit'>Ok</Button>\r\n                    ]}\r\n                >\r\n                    <form id='profile-form' onSubmit={this.handleProfileModalOk}>\r\n                        <Upload.Dragger \r\n                            name='file' \r\n                            multiple={false} \r\n                            customRequest={this.setNewProfilePicture} \r\n                            onChange={this.handleUploadChange}\r\n                            accept='image/*'\r\n                            fileList={this.state.fileList}>\r\n                        <p className=\"ant-upload-text\">Click or drag a picture</p>\r\n                        </Upload.Dragger>\r\n                    </form>\r\n                </Modal>\r\n                <div className='user_info'>\r\n                    { (!this.state.userInfo || !this.state.userInfo.profilePicture)&& <Icon style={{ fontSize: '150px' }} type=\"user\" />}\r\n                    { this.state.userInfo && this.state.userInfo.profilePicture && \r\n                        <div>\r\n                            <img className='profile_image' src={ this.state.userInfo.profilePicture } />\r\n                        </div>\r\n                    }\r\n                    { this.state.isProfileOwner &&\r\n                        <Text id='change_profile_pic' onClick={this.openProfileModal}>Change Profile Picture</Text>\r\n                    }\r\n                    <div id='name_and_loc'>\r\n                        <div id='name'>\r\n                            { (this.state.userInfo && this.state.userInfo.username) && (this.state.isProfileOwner \r\n                                ? <Title editable={{ onChange: this.onUsernameEdit }}>{ this.state.userInfo.username }</Title>\r\n                                : <Title>{ this.state.userInfo.username }</Title>)\r\n                            }\r\n                        </div>\r\n                        <br />\r\n                        <div id='loc'>\r\n                            { (this.state.userInfo && (this.state.userInfo.address))\r\n                                ? <Title level={3}>{ this.state.userInfo.address }</Title>\r\n                                : (this.state.userInfo \r\n                                    ? <Title level={3}>{ this.state.userInfo.city }</Title> \r\n                                    : <></>)\r\n                            }\r\n                        </div>\r\n                        { this.state.distance && \r\n                            <Text id='distance'>{ this.state.distance } miles away</Text>\r\n                        }\r\n                    </div>\r\n                    { this.state.isProfileOwner && \r\n                        <Button type='primary' id='edit' onClick={this.openAdditionalInfoModal}>Edit profile</Button>\r\n                    }\r\n                </div>\r\n                <hr />\r\n                <div id='hosting'>\r\n                    <Title level={2}>Games Hosting</Title>\r\n                    <hr />\r\n                    <div className='games_list'>\r\n                        <div className='games_list_children'>\r\n                            { hostingCards.length ?\r\n                            <>\r\n                                <div className='games_list_carousel'>\r\n                                    <Carousel ref={ node => (this.carouselHosting = node) } { ...props } slidesToShow={ Math.min(4, hostingCards.length) } >\r\n                                        { hostingCards }\r\n                                    </Carousel>\r\n                                </div>\r\n                                <br />\r\n                                <div className='scroll-group'>\r\n                                    <Icon type='left-circle' className='scroll' onClick={ this.prevHosting } />\r\n                                    <Icon type='right-circle' className='scroll' onClick={ this.nextHosting } />\r\n                                </div>\r\n                            </>\r\n                            : <Empty />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Title level={2}>Favorites</Title>\r\n                    <hr />\r\n                    <div className='games_list'>\r\n                        <div className='games_list_children'>\r\n                            { favoritesCards.length ? \r\n                            <>\r\n                                <div className='games_list_carousel'>\r\n                                    <Carousel ref={ node => (this.carouselFavorites = node) } { ...props } slidesToShow={ Math.min(4, favoritesCards.length) } >\r\n                                        { favoritesCards }\r\n                                    </Carousel>\r\n                                </div>\r\n                                <br/>\r\n                                <div className='scroll-group'>\r\n                                    <Icon type='left-circle' className='scroll' onClick={ this.prevFavorites } />\r\n                                    <Icon type='right-circle' className='scroll' onClick={ this.nextFavorites } /> \r\n                                </div>\r\n                            </>\r\n                            : <Empty />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id='bio'>\r\n                    \r\n                    <div id='bio_title'>\r\n                        <Title level={3}>bio</Title>\r\n                    </div>\r\n                    <div id='bio_info'>\r\n                        { (this.state.userInfo && this.state.userInfo.bio) && ( this.state.isProfileOwner\r\n                            ? <Paragraph ellipsis={{ rows: 5, expandable: true }} editable={{ onChange: this.onBioEdit }}>{ this.state.userInfo.bio }</Paragraph>\r\n                            : <Paragraph ellipsis={{ rows: 5, expandable: true }}>{ this.state.userInfo.bio }</Paragraph>)\r\n                        }\r\n                    </div>\r\n                    <Link to={ `/messages?id=${ this.state.userId }` }><Title level={3}><Icon type=\"mail\" /> Message this host</Title></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Input,\r\n  Dropdown,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Layout,\r\n  Button,\r\n  Carousel,\r\n  Avatar\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Games.css\";\r\nimport config from '../config.json'\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\nclass Games extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n    this.limit = \"50\";\r\n    this.state = {\r\n      apiResponse: [],\r\n      title: \"\"\r\n    };\r\n  }\r\n  next() {\r\n    this.carousel.next();\r\n  }\r\n  previous() {\r\n    this.carousel.prev();\r\n  }\r\n\r\n  genre_filter = (\r\n    <Menu>\r\n      <SubMenu title=\"A-I\">\r\n        <Menu.Item onClick={() => this.genre(`adventure`)}>Adventure</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`arcade`)}>Arcade</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`fighting`)}>Fighting</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`hack-and-slash-beat-em-up`)}>\r\n          Hack-and-Slash / Beat-Em-Up\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`indie`)}>Indie</Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu title=\"M-P\">\r\n        <Menu.Item onClick={() => this.genre(`music`)}>Music</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`pinball`)}>Pinball</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`platform`)}>Platform</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`point-and-click`)}>\r\n          Point-and-Click\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`puzzle`)}>Puzzle</Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu title=\"Q-R\">\r\n        <Menu.Item onClick={() => this.genre(`quiz-trivia`)}>\r\n          Quiz / Trivia\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`racing`)}>Racing</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`real-time-strategy-rts`)}>\r\n          RTS\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`role-playing-rpg`)}>\r\n          RPG\r\n        </Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu title=\"S\">\r\n        <Menu.Item onClick={() => this.genre(`shooter`)}>Shooter</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`simulator`)}>Simulator</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`sport`)}>Sport</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`strategy`)}>Strategy</Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu title=\"T-V\">\r\n        <Menu.Item onClick={() => this.genre(`tactical`)}>Tactical</Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`turn-based-strategy-tbs`)}>\r\n          Turn-Based\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => this.genre(`visual-novel`)}>\r\n          Visual-Novel\r\n        </Menu.Item>\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n\r\n  search(value) {\r\n    this.state.title = `Search for: \"${value}\"`;\r\n    fetch(`${config.backend_url}/igdb/search?title=${value}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ apiResponse: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  popular() {\r\n    this.state.title = `Most Popular`;\r\n    fetch(`${config.backend_url}/igdb/popular?limit=${this.limit}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ apiResponse: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  genre(value) {\r\n    this.state.title = `Genre: \"${value}\"`;\r\n    fetch(\r\n      `${config.backend_url}/igdb/searchbyGenre?genre=${value}&limit=${this.limit}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ apiResponse: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.popular();\r\n  }\r\n\r\n  render() {\r\n    const props = {\r\n      dots: true,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 6\r\n    };\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <Row>\r\n          <Col span={18}>\r\n            <div>\r\n              <Text>Browse By </Text>\r\n              <Button onClick={() => this.popular()}>popular</Button>\r\n              <Dropdown overlay={this.genre_filter}>\r\n                <Button>\r\n                  genre <Icon type=\"down\" />\r\n                </Button>\r\n              </Dropdown>\r\n            </div>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Search\r\n              placeholder=\"Search by Name\"\r\n              onSearch={value => this.search(value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br></br>\r\n        <Title>{this.state.title}</Title>\r\n        <Carousel\r\n          class=\"carousel\"\r\n          ref={node => (this.carousel = node)}\r\n          {...props}\r\n        >\r\n          {this.state.apiResponse.map(elem => {\r\n            return (\r\n              <div className=\"image-container\">\r\n                <Link to={`/singlegame/?id=${elem.id}`}>\r\n                  <img className=\"elem-image\" src={\"http://\" + elem.coverUrl} />\r\n                </Link>\r\n                <div className=\"name-text-box\">\r\n                  <p className=\"name-text\">{elem.name}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Carousel>\r\n          <Avatar className=\"arrow-left\" size=\"large\" icon=\"left-circle\" onClick={this.previous} /> \r\n          <Avatar className=\"arrow-right\" size=\"large\" icon=\"right-circle\" onClick={this.next} />\r\n        {/* <div></div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Games;\r\n","import React from \"react\";\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Layout,\r\n  Typography,\r\n  Card,\r\n  Carousel,\r\n  Empty,\r\n  Modal,\r\n  Avatar,\r\n  Form,\r\n  Upload,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport AddInfoForm from \"./addInfoForm\";\r\n\r\nimport { Link, BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport axios from \"axios\";\r\nimport \"./Hosts.css\";\r\nimport config from \"../config.json\";\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Content } = Layout;\r\n\r\nclass Hosts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.nextHosting = this.nextHosting.bind(this);\r\n    this.prevHosting = this.prevHosting.bind(this);\r\n    const values = queryString.parse(props.location.search);\r\n    this.state.userId = values.id;\r\n    this.carouselHosting = React.createRef();\r\n    console.log(props);\r\n  }\r\n  state = { userId: null };\r\n\r\n  componentDidMount() {\r\n    // get host infos\r\n    axios\r\n      .get(`${config.backend_url}/profile/getCurrentUserInformation`)\r\n      .then(user => {\r\n        console.log(user);\r\n        this.props.setUser(user.data);\r\n      })\r\n      .then(() => {\r\n        return axios({\r\n          url: `${config.backend_url}/profile/getProfileUserInformation?id=${this.state.userId}`,\r\n          method: \"GET\"\r\n        });\r\n      })\r\n      .then(userInfo => {\r\n        console.log(userInfo.data._id);\r\n        this.setState({ userInfo: userInfo.data });\r\n      })\r\n      .then(() => {\r\n        this.getHostList(this.state.userInfo.data.city);\r\n      })\r\n      // .then(() => {\r\n      //   this.getGameList(\"hosting\");\r\n      // })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  nextHosting() {\r\n    this.carouselHosting.next();\r\n  }\r\n\r\n  prevHosting() {\r\n    this.carouselHosting.prev();\r\n  }\r\n\r\n  getHostList = async loc => {\r\n    // once google maps api is set up we can post people near user location\r\n    if (!this.state.userInfo) {\r\n      // TEST:  if (!this.state.userInfo || !this.state.userInfo[type])\r\n      return <Empty />;\r\n    }\r\n    const idList = this.state.userInfo[loc];\r\n    const HostPromises = [];\r\n    for (let i = 0; i < idList.length; i += 1) {\r\n      const hostReq = axios.get(\r\n        `${config.backend_url}/profile/getProfileUserInformation?id=${idList[i]}`\r\n      );\r\n      HostPromises.push(hostReq);\r\n    }\r\n    const hostInfo = await Promise.all(HostPromises);\r\n    this.setState({ hosts: hostInfo });\r\n  };\r\n\r\n  getGameList = async type => {\r\n    if (!this.state.userInfo || !this.state.userInfo[type]) {\r\n      // TEST:  if (!this.state.userInfo || !this.state.userInfo[type])\r\n      return <Empty />;\r\n    }\r\n    const idList = this.state.userInfo[type];\r\n    const InfoPromises = [];\r\n    for (let i = 0; i < idList.length; i += 1) {\r\n      const gameReq = axios.get(\r\n        `${config.backend_url}/igdb/game?id=${idList[i]}`\r\n      );\r\n      const coverReq = axios.get(\r\n        `${config.backend_url}/igdb/cover?id=${idList[i]}`\r\n      );\r\n      InfoPromises.push(gameReq, coverReq);\r\n    }\r\n    const gameInfo = await Promise.all(InfoPromises);\r\n    type === \"hosting\"\r\n      ? this.setState({ hosting: gameInfo })\r\n      : this.setState({ favorites: gameInfo });\r\n  };\r\n\r\n  render() {\r\n    let createGameCards = type => {\r\n      console.log(\"creatingGameCards\");\r\n      const gameInfo = this.state[type];\r\n      if (!gameInfo) return;\r\n      const cards = [];\r\n      for (let i = 0; i < gameInfo.length; i += 2) {\r\n        cards.push(\r\n          <div className=\"card\">\r\n            <Link to={`/singlegame/?id=${gameInfo[i].data.id}`}>\r\n              <img src={\"http://\" + gameInfo[i + 1].data} />\r\n            </Link>\r\n            <div className=\"name-text-box\">\r\n              <a className=\"name-text\">{gameInfo[i].data.name}</a>\r\n              <br />\r\n              {this.state.isProfileOwner && (\r\n                <Text\r\n                  className=\"name-text\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    this.removeCard(type, gameInfo[i].data.id);\r\n                  }}\r\n                >\r\n                  Remove\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      return cards;\r\n    };\r\n    let createHostCards = loc => {\r\n      console.log(\"creatingHostCards\");\r\n      const hostInfo = this.state[loc];\r\n      if (!hostInfo) return;\r\n      const cards = [];\r\n      for (let i = 0; i < hostInfo.length; i += 2) {\r\n        cards.push(\r\n          <div className=\"card\">\r\n            <Link to={`/profile/?id=${hostInfo[i].data.id}`}>\r\n              <img src={`/profile/?id=${hostInfo[i].data.profilePicture}`} />\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n      return cards;\r\n    };\r\n    const hostCards = createHostCards(\"hosts\") || [];\r\n    const gameCards = createGameCards(\"hosting\") || []; // NOT TEST\r\n    const props = {\r\n      dots: true,\r\n      speed: 500,\r\n      circular: false,\r\n      slidesToScroll: 4\r\n    };\r\n    return (\r\n      // clicking on a card links to profile.js\r\n      <div>\r\n        <Title level={2}>Hosts for You</Title>\r\n        <hr />\r\n        <div>\r\n          <div>\r\n            {hostCards.length ? (\r\n              <>\r\n                <div>\r\n                  <Carousel\r\n                    ref={node => (this.carouselHosting = node)}\r\n                    {...props}\r\n                    slidesToShow={Math.min(4, hostCards.length)}\r\n                  >\r\n                    {hostCards}\r\n                  </Carousel>\r\n                </div>\r\n                <br />\r\n                <div className=\"scroll-group\">\r\n                  <Icon\r\n                    type=\"left-circle\"\r\n                    className=\"scroll\"\r\n                    onClick={this.prevHosting}\r\n                  />\r\n                  <Icon\r\n                    type=\"right-circle\"\r\n                    className=\"scroll\"\r\n                    onClick={this.nextHosting}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Empty />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hosts;\r\n","import React, { useDebugValue } from \"react\";\r\nimport {\r\n  Card,\r\n  Descriptions,\r\n  Tag,\r\n  Rate,\r\n  Icon,\r\n  Avatar,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Layout,\r\n  Input,\r\n  Carousel\r\n} from \"antd\";\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport FacebookLoginButton from \"./FacebookLoginButton\";\r\nimport config from \"../config.json\";\r\n\r\nimport \"./SingleGame.css\";\r\n\r\nconst { Content } = Layout;\r\nconst { Search } = Input;\r\nconst { Title, Text } = Typography;\r\nconst queryString = require('query-string');\r\n\r\nclass SingleGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiResponse: {},\r\n      apiScreenshots: [],\r\n      apiAges: {},\r\n      apiGenre: [],\r\n      apiPlatforms: {},\r\n      coverUrl: \"\",\r\n\r\n      hosting: false,\r\n      hosts: [],\r\n      liked: false,\r\n      likes: \"\",\r\n\r\n      userInfo: {},\r\n      userHosting: [],\r\n      userFavorites: []\r\n    };\r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n    this.gid = queryString.parse(this.props.location.search).id;\r\n  }\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  }\r\n  previous() {\r\n    this.carousel.prev();\r\n  }\r\n\r\n  convertDate(timestamp) {\r\n    var ts = new Date(timestamp)\r\n      .toDateString()\r\n      .split(\" \")\r\n      .slice(1)\r\n      .join(\" \");\r\n    return ts;\r\n  }\r\n\r\n  getGame() {\r\n    var url =\r\n      `http://localhost:9000/igdb/game?id=` +\r\n      this.gid;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data =>\r\n        this.setState({\r\n          apiResponse: data,\r\n          apiScreenshots: data.screenshots,\r\n          apiAges: data.age_ratings[0][0],\r\n          apiGenre: data.genres, \r\n          apiPlatforms: data.platforms[0][0]\r\n        })\r\n      )\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  cover() {\r\n    var url =\r\n      `http://localhost:9000/igdb/cover?id=` +\r\n      this.gid;\r\n    fetch(url)\r\n      .then(res => res.text())\r\n      .then(data => this.setState({ coverUrl: data }))\r\n      .catch(err => console.log(`Error is: ${err}`));\r\n  }\r\n\r\n  hostGame = async () => {\r\n    const userId = this.props.user._id;\r\n    const id = this.gid;\r\n    console.log(\"Adding Host for game \" + id + \" for user \" + userId);\r\n    await axios.post(`${config.backend_url}/games/addHost`, \r\n      null, \r\n      { params: {id, userId}})\r\n      .then(res => {\r\n        this.setState( {hosting: true});\r\n\r\n        console.log(res);\r\n      })\r\n      .catch(err => console.warn(err));\r\n    const userInfo = {...this.state.userInfo, hosting: { id: id, operation: \"add\"}};\r\n    axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\r\n      .then(res => {\r\n        this.setState({ userInfo })\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.warn(err)\r\n      });\r\n  }\r\n\r\n  unhostGame = async () => {\r\n    const userId = this.props.user._id;\r\n    const id = this.gid;\r\n    console.log(\"Removing Host for game \" + id + \" for user \" + userId);\r\n    await axios.post(`${config.backend_url}/games/removeHost`, \r\n      null, \r\n      { params: {id, userId}})\r\n      .then(res => {\r\n        this.setState( {hosting: false})\r\n        console.log(res);\r\n      })\r\n      .catch(err => console.warn(err));\r\n    const userInfo = {...this.state.userInfo, hosting: { id: id, operation: \"remove\"}};\r\n    axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\r\n      .then(res => {\r\n        this.setState({ userInfo })\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.warn(err)\r\n      });\r\n  }\r\n\r\n  initialize() {\r\n    var url = `${config.backend_url}/games/getGameInfo?id=${this.gid}`\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => {this.checkHost(data.hosts);})\r\n      .catch(err => console.warn(err));\r\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\r\n      .then((userInfo) => {\r\n        console.log(userInfo);\r\n        this.setState({ userInfo: userInfo.data,\r\n          userHosting: userInfo.data.hosting,\r\n          userFavorites: userInfo.data.favorites});\r\n        this.checkFavorite();\r\n      })\r\n      .catch(err => console.warn(err));\r\n  }\r\n\r\n  checkHost(getHosts) {\r\n    this.setState({ hosts: getHosts});\r\n    const userId = this.props.user._id;\r\n    if(getHosts.indexOf(userId) > -1)\r\n      this.state.hosting = true;\r\n    console.log(this.state.hosts);\r\n    console.log(\"hosting is \" + this.state.hosting);\r\n  }\r\n  \r\n  checkFavorite() {\r\n    if(this.state.userFavorites.indexOf(this.gid) > -1){\r\n      this.setState({ liked: true});\r\n      console.log(\"User has liked this game\");\r\n    }\r\n  }\r\n\r\n  favorite = () => {\r\n    const id = this.gid;\r\n    if(!this.state.liked){\r\n      const userInfo = {...this.state.userInfo, favorites: { id: id, operation: \"add\"}};\r\n      axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\r\n            .then(res => {\r\n                this.setState({ userInfo })\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err)\r\n            });\r\n    }\r\n    else{\r\n      const userInfo = {...this.state.userInfo, favorites: { id: id, operation: \"remove\"}};\r\n      axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\r\n            .then(res => {\r\n                this.setState({ userInfo });\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err)\r\n            });\r\n    }\r\n    this.setState( {liked: !this.state.liked});\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.initialize();\r\n    console.log(this.state.userHosting);\r\n    this.getGame();\r\n    this.cover();\r\n  }\r\n\r\n  render() {\r\n    const carouselProps = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n    return (\r\n      <Content>\r\n        <Row>\r\n          <Col span={8} alignItems=\"top\">\r\n            <div class=\"container\">\r\n              <img\r\n                height=\"375\"\r\n                width=\"260\"\r\n                src={\"http://\" + this.state.coverUrl}\r\n              />\r\n              <br />\r\n              <div class=\"small-container\">\r\n                {this.props.user ?\r\n                <Rate character={<Icon type=\"heart\" />} count={1} \r\n                value={this.state.liked} onChange={this.favorite}/> \r\n                : <Rate disabled character={<Icon type=\"heart\" />} count={1}/>}\r\n                {/* <Text> {this.state.apiResponse.rating}</Text> */}\r\n              </div>\r\n              <br />\r\n              <Card title=\"Where To Play\" style={{ width: 300 }}>\r\n                <Avatar size=\"small\" icon=\"user\" />\r\n                <Avatar size=\"small\" icon=\"user\" />\r\n                <Avatar size=\"small\" icon=\"user\" />\r\n                <br />\r\n                <Link>My Hosts</Link>\r\n                <br />\r\n                <Link to={`/people`}>More Hosts</Link>\r\n                {/* link to people page  */}\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n          <Col span={8}>\r\n            <div class=\"container\">\r\n              <Title>{this.state.apiResponse.name}</Title>\r\n              <br />\r\n              <Text>{this.state.apiResponse.summary}</Text>\r\n              <br />\r\n              <Title level={2}>Screencap</Title>\r\n            </div>\r\n            <br />\r\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n              <Col span={2}>\r\n                <Avatar\r\n                  className=\"arrow-left\"\r\n                  icon=\"left-circle\"\r\n                  onClick={this.previous}\r\n                />\r\n              </Col>\r\n\r\n              <Col span={20}>\r\n                <Carousel\r\n                  class=\"carousel\"\r\n                  ref={node => (this.carousel = node)}\r\n                  {...carouselProps}\r\n                >\r\n                  {this.state.apiScreenshots.map(elem => {\r\n                    return (\r\n                      <div align=\"center\" className=\"carousel-container\">\r\n                        <img\r\n                          className=\"image-container\"\r\n                          src={\r\n                            \"http:\" + elem[0].url.replace(\"t_thumb\", \"t_720p\")\r\n                          }\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </Carousel>\r\n              </Col>\r\n              <Col span={2}>\r\n                <Avatar\r\n                  className=\"arrow-right\"\r\n                  icon=\"right-circle\"\r\n                  onClick={this.next}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={8}>\r\n            <div class=\"container\">\r\n              { this.props.user ? \r\n                  this.state.hosting ?\r\n                    <Button onClick={this.unhostGame}>Stop Hosting</Button>\r\n                    :<Button onClick={this.hostGame}>Host</Button>\r\n                  :<a href={`${config.backend_url}/auth/facebook`}>\r\n                    <Button>Log in with Facebook</Button>\r\n                  </a>\r\n              }\r\n              <br/>\r\n              <Card title=\"Details\" style={{ width: 350 }}>\r\n                <Descriptions>\r\n                  <Descriptions.Item label=\"platform\">\r\n                    {this.state.apiPlatforms.name}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"version\">\r\n                    {this.state.apiPlatforms.versions}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"release date\">\r\n                    {this.convertDate(\r\n                      this.state.apiResponse.first_release_date * 1000\r\n                    )}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"rating\">\r\n                    {this.state.apiResponse.rating_count}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"suitable for\">\r\n                    {this.state.apiAges.synopsis}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n                <div class=\"small-container\">\r\n                  {this.state.apiGenre.map(elem => {\r\n                    return (\r\n                      <Tag>{elem[0].name}</Tag>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleGame;","import React, { Component } from 'react';\r\n\r\nexport default class FacebookLogin extends Component {\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('FBObjectReady', this.initializeFacebookLogin);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('FBObjectReady', this.initializeFacebookLogin);\r\n  }\r\n\r\n  /**\r\n   * Init FB object and check Facebook Login status\r\n   */\r\n  initializeFacebookLogin = () => {\r\n    this.FB = window.FB;\r\n    this.checkLoginStatus();\r\n  }\r\n\r\n  /**\r\n   * Check login status\r\n   */\r\n  checkLoginStatus = () => {\r\n    this.FB.getLoginStatus(this.facebookLoginHandler);\r\n  }\r\n\r\n  /**\r\n   * Check login status and call login api is user is not logged in\r\n   */\r\n  facebookLogin = () => {\r\n    if (!this.FB) return;\r\n\r\n    this.FB.getLoginStatus(response => {\r\n      if (response.status === 'connected') {\r\n        this.facebookLoginHandler(response);\r\n      } else {\r\n        this.FB.login(this.facebookLoginHandler, {scope: 'public_profile'});\r\n      }\r\n    }, );\r\n  }\r\n\r\n  /**\r\n   * Handle login response\r\n   */\r\n  facebookLoginHandler = response => {\r\n    if (response.status === 'connected') {\r\n      this.FB.api('/me', userData => {\r\n        let result = {\r\n          ...response,\r\n          user: userData\r\n        };\r\n        this.props.onLogin(true, result);\r\n      });\r\n    } else {\r\n      this.props.onLogin(false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {children} = this.props;\r\n    return (\r\n      <div onClick={this.facebookLogin}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Messages from \"./components/Messages\";\r\nimport Profile from \"./components/Profile\";\r\nimport Games from \"./components/Games\";\r\nimport Hosts from \"./components/Hosts\";\r\nimport SingleGame from \"./components/SingleGame\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    user: null\r\n  };\r\n\r\n  setUser = user => {\r\n    console.log(user);\r\n    this.setState({ user });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.user);\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <Header user={this.state.user} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={props => (\r\n                <Home\r\n                  setUser={this.setUser}\r\n                  user={this.state.user}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/inbox\"\r\n              render={props => <Messages user={this.state.user} {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/messages\"\r\n              render={props => <Messages user={this.state.user} {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/games\"\r\n              render={props => <Games user={this.state.user} {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/people\"\r\n              render={props => <Hosts user={this.state.user} {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/singlegame\"\r\n              render={props => <SingleGame user={this.state.user} {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/profile\"\r\n              render={props => (\r\n                <Profile\r\n                  setUser={this.setUser}\r\n                  user={this.state.user}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}