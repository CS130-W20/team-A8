{"version":3,"sources":["components/Header.js","components/Home.js","components/Messages.js","components/addInfoForm.js","components/Profile.js","components/Games.js","components/Hosts.js","components/SingleGame.js","components/FacebookLoginButton.js","App.js","serviceWorker.js","index.js"],"names":["Title","Search","header","props","console","log","user","style","width","backgroundColor","float","color","position","left","top","level","theme","mode","defaultSelectedKeys","lineHeight","align","Item","key","to","type","_id","undefined","disabled","Content","Home","Text","axios","get","config","backend_url","then","setUser","this","padding","marginTop","href","React","Component","require","TextArea","Sider","Messages","onReceiveMessage","value","a","state","userID","title","post","showModal","setState","visible","handleOk","e","handleCancel","shared","onChange","message","target","handleEnter","onSendMessage","apiResponse","messages","username","name","partner","userInfo","gid","socket","io","on","data","addMessageFromSocket","forceUpdate","sendMessage","msg","emit","window","location","firstName","fetch","res","json","catch","err","split","getChat","inbox","partnerID","sharedWith","sharing","indexOf","warn","chatHist","msgs","body_","JSON","stringify","userID1","userID2","method","headers","Accept","body","m","author","user1","user2","addMessage","addToHistory","includes","loading","minHeight","size","src","profilePicture","className","margin","background","ref","node","container","map","elem","hoverable","onClick","id","onOk","onCancel","footer","handleShare","placeholder","enterButton","onSearch","AddInfoForm","handleAdditionalInfoOk","preventDefault","form","validateFields","values","setAddInfo","addr1","addr2","city","zip","getFieldDecorator","address","length","onSubmit","label","rules","required","initialValue","bio","rows","htmlType","WrappedForm","create","Paragraph","Profile","userId","isProfileOwner","showProfileModal","showAdditionalInfoModal","onUsernameEdit","error","onBioEdit","removeCard","filter","val","ind","arr","toString","removeInd","gameInfo","splice","operation","openProfileModal","openAdditionalInfoModal","closeAdditionalInfoModal","handleProfileModalCancel","handleProfileModalOk","newProfilePicture","formData","FormData","append","url","vals","getGameList","idList","InfoPromises","i","gameReq","coverReq","push","Promise","all","setNewProfilePicture","file","onSuccess","setTimeout","handleUploadChange","info","fileList","nextHosting","bind","prevHosting","nextFavorites","prevFavorites","queryString","parse","search","carouselHosting","createRef","carouselFavorites","latitude","longitude","distance","next","prev","componentDidMount","createCards","cards","cursor","hostingCards","favoritesCards","dots","speed","circular","slidesToScroll","slidesToShow","Dragger","multiple","customRequest","accept","fontSize","editable","justify","Math","min","ellipsis","expandable","SubMenu","Games","genre_filter","genre","previous","carousel","limit","recommended","genres","popular","span","overlay","class","infinite","coverUrl","icon","Hosts","getHostList","results","hostList","HostPromises","currentUser","hostReq","hosting","hostInfo","hosts","hostCards","createHostCards","SingleGame","hostGame","params","unhostGame","favorite","liked","likes","apiScreenshots","apiAges","apiGenre","apiPlatforms","hostData","userHosting","userFavorites","genreIds","timestamp","Date","toDateString","slice","join","screenshots","platforms","age_ratings","genreAdd","pic","text","checkHost","getHost","favorites","checkFavorite","getHosts","initialize","getGame","cover","alignItems","height","character","count","summary","replace","versions","convertDate","first_release_date","rating_count","synopsis","App","Header","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b6c155c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Avatar, Menu, Input, Typography, Icon, Dropdown } from \"antd\";\nimport { Link, Redirect, BrowserRouter } from \"react-router-dom\";\nimport config from \"../config.json\";\nconst { Search } = Input;\nconst { Title } = Typography;\n\nconst header = props => {\n  console.log(props.user);\n  return (\n    <div style={{ width: \"100%\", backgroundColor: \"#041527\" }}>\n      <div>\n        <Title\n          style={{\n            float: \"left\",\n            color: \"white\",\n            position: \"absolute\",\n            left: \"10px\",\n            top: \"16px\"\n          }}\n          level={4}\n        >\n          GAMELINKS\n        </Title>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          defaultSelectedKeys={[\"0\"]}\n          style={{ lineHeight: \"64px\" }}\n          align=\"right\"\n        >\n          <Menu.Item key=\"0\">\n            <Link to=\"/\">\n              <Icon type=\"home\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to={`/profile?id=${props.user ? props.user._id : undefined}`}>\n              profile\n            </Link>\n          </Menu.Item>\n          <Menu.Item disabled={props.user ? false : true}>\n            <Link to=\"/inbox\">inbox</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"/people\">hosts</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"/games\">games</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default header;\n","import React from \"react\";\nimport { Typography, Layout, Button, Carousel } from \"antd\";\nimport config from \"../config.json\";\nimport axios from 'axios';\n\nconst { Content } = Layout;\nconst { Title, Text } = Typography;\n\nclass Home extends React.Component {\n\n  componentDidMount() {\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n      .then((user) => {\n        if (!user) {\n          this.props.setUser(null);\n        }\n      })\n  }\n\n  render() {\n    console.log(this.props.user);\n    return (\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n        <Title type=\"secondary\">show off your stats.</Title>\n        <br />\n        <Title type=\"secondary\">connect and join with hosts.</Title>\n        <br /> <Title type=\"secondary\">share what's good.</Title>\n        <br />\n        <div align=\"center\">\n          { this.props.user\n            ? <a href={`${config.backend_url}/auth/logout`}>\n                <Button>Log Out</Button>\n              </a>\n            : <a href={`${config.backend_url}/auth/facebook`}>\n                <Button>Log in with Facebook</Button>\n              </a>\n          }\n        </div>\n      </Content>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport {\n  Affix,\n  Avatar,\n  Layout,\n  Menu,\n  Breadcrumb,\n  Icon,\n  Input,\n  Card,\n  Button,\n  Modal,\n  List\n} from \"antd\";\nimport { Link, BrowserRouter, withRouter } from \"react-router-dom\";\nimport config from \"../config.json\";\n// diff package\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nconst queryString = require('query-string');\n\n\nconst { Search, TextArea } = Input;\nconst { Content, Sider } = Layout;\n\nconst uri = \"http://localhost:9000\";\nconst options = { transports: [\"websocket\"] };\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: [],\n      messages: [],\n      message: \"\",\n      username: \"\",\n      name: \"\",\n      partner: \"\",\n      title: \"\",\n      visible: false,\n      userInfo: {},\n      shared: false\n    };\n    this.gid = \"\";\n    this.socket = io(\"localhost:9000\");\n\n    this.socket.on(\"RECEIVE_MESSAGE\", function(data) {\n      console.log(`RECEIVED MESSAGE`);\n      addMessageFromSocket(data);\n    });\n\n    const addMessageFromSocket = data => {\n      console.log('In add message from socket');\n      console.log(data);\n      this.state.messages = [...this.state.messages, data];\n      this.forceUpdate();\n      console.log(this.state.messages);\n    };\n\n    this.sendMessage = msg => {\n      console.log('in send message');\n      console.log(msg);\n      console.log(this.socket);\n      this.socket.emit(\"SEND_MESSAGE\", msg);\n    };\n  }\n\n  inbox() {\n    console.log(window.location.href);\n    this.state.title = `Inbox`;\n    this.setState({ username: this.props.user.firstName });\n    fetch(`${config.backend_url}/messaging/inbox`)\n       .then(res => res.json())\n       .then(data => {\n         console.log(data); \n         this.setState({ apiResponse: data });\n       })\n       .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  addMessage(data) {\n    console.log('In add message');\n    console.log(data);\n    this.setState({ messages: [...this.state.messages, data] });\n    console.log(this.state.messages);\n  }\n\n  messages() {\n     this.state.title = `Messages`;\n     console.log('finding or creating chat');\n     this.state.title = `Chat`;\n     const partner = window.location.href.split(\"?id=\");\n     fetch(`${config.backend_url}/messaging/addChatPartner?id=${partner[1]}`)\n       .then(() => {\n         console.log('GETTING NEW MESSAGE');\n         this.setState({ visible: true });\n         this.getChat(partner[1]);    \n       })\n       .then(() => {\n          this.inbox();\n       })\n       .catch(err => console.log(`Error is: ${err}`));  \n  }\n  \n  getChat(partnerID) {\n    this.state.title = `Chat`;\n    this.setState({ partner: partnerID });\n    console.log('getting chat');\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n      .then((userInfo) => {\n        console.log(userInfo);\n        this.setState({ \n          userInfo: userInfo.data,\n        });\n        console.log(this.state.userInfo.sharedWith);\n        console.log(partnerID);\n        const sharing = (this.state.userInfo.sharedWith.indexOf(partnerID) > -1 ? true : false)\n        this.setState({shared: sharing});\n        console.log(\"Sharing is:\");\n        console.log(sharing);\n      })\n      .catch(err => console.warn(err));\n    \n    axios.get(`${config.backend_url}/profile/getNameByID?id=${partnerID}`)\n      .then((name) => {\n         console.log('now, getting chat history');\n         console.log(name.data[\"fname\"]);\n         this.setState({ name: name.data[\"fname\"] })\n         return fetch(`${config.backend_url}/messaging/getChatHistory?id=${partnerID}`)\n      })\n      .then((chatHist) => chatHist.json())\n      .then((msgs) => this.setState({ messages: msgs }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  addToHistory(msg) {\n    console.log(\"in add to chat history\");\n    this.state.title = `Add to history`;\n    console.log(msg);\n\n    // replace with messageInfo\n    var body_ = JSON.stringify({\n      userID1: this.props.user._id, // Replace this with current user id\n      userID2: this.state.partner, // Replace this with chat partner id\n      message: msg\n    });\n    console.log(body_);\n    fetch(`${config.backend_url}/messaging/addToChatHistory`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: body_\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is ${err}`));\n    // clear the message\n  }\n\n  onSendMessage(value) {\n    const m = {\n       author: this.props.user.firstName,\n       user1: this.props.user._id,\n       user2: this.state.partner, \n       message: value\n    };\n    this.sendMessage(m);\n    this.addMessage(m);\n    this.addToHistory(m);\n  }\n\n  onReceiveMessage = async value => {\n    const messageInfo = { ...this.state.userID, value };\n    this.state.title = `Receive Message`;\n    await axios.post(`${config.backend_url}/messaging/addToChatHistory`, value);\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  // send dm\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false\n    });\n  };\n\n  // exit messaging modal\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      shared: false,\n      visible: false\n    });\n  };\n\n  handleShare(){\n    if(!this.state.shared)\n      axios.post(`${config.backend_url}/profile/addSharedWith?id=${this.state.partner}`)\n        .then(res => {\n          console.log(res);\n          this.setState({shared: true});\n          console.log(this.state.shared);\n        })\n        .catch(err => console.warn(err))\n    else\n      axios.post(`${config.backend_url}/profile/removeSharedWith?id=${this.state.partner}`)\n        .then(res => {\n          console.log(res);\n          this.setState({shared: false});\n          console.log(this.state.shared);\n        })\n        .catch(err => console.warn(err))\n  }\n\n  componentDidMount() {\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n      .then((userInfo) => {\n        console.log(userInfo);\n        this.setState({ \n          userInfo: userInfo.data,\n        });\n      })\n      .catch(err => console.warn(err));\n    if (window.location.href.includes('messages')) {\n      this.messages();\n    } else {\n      this.inbox();\n    }\n    // connect w axios\n  }\n\n  onChange = (e) => {\n     this.setState({ message: e.target.value });\n  }\n\n  handleEnter = (e) => {\n    this.onSendMessage(this.state.message);\n    this.setState({ message: '' }); \n  }\n\n  render() {\n    const { visible, loading } = this.state;\n\n    return (\n      <div>\n        <Layout style={{ minHeight: \"90vh\" }}>\n          <Sider>\n            <Avatar size={64} src={this.state.userInfo ? this.state.userInfo.profilePicture : undefined} />\n            <span style={{color: \"white\"}}>{this.state.userInfo ? this.state.userInfo.username : undefined}</span>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"3\"]}>\n              <Menu.Item key=\"1\">\n                <Icon type=\"upload\" />\n                <span className=\"nav-text\">inbox</span>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n               {(this.props.user) &&\n                  <Link to={`/profile?id=${this.props.user._id}`}>\n                     <Icon type=\"user\"/>\n                     back to profile\n                  </Link>\n               }\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Content style={{ margin: \"0 16px\" }}>\n              <div style={{ padding: 24, background: \"#fff\", minHeight: 475 }}>\n                <div\n                  className=\"scrollable-container\"\n                  ref={node => {\n                    this.container = node;\n                  }}\n                >\n                  {/* have a pop up modal with text area and messaging */}\n                  {this.state.apiResponse.map(elem => {\n                    return (\n                      <div className=\"p1\">\n                        <Card hoverable title={elem.name}>\n                          <Button size=\"large\" onClick={() => {\n                             this.showModal();\n                             this.getChat(elem.id);\n                          }}>\n                            Message\n                          </Button>\n                        </Card>\n                        <Modal\n                          visible={this.state.visible}\n                          title={this.state.name}\n                          onOk={this.handleOk}\n                          onCancel={this.handleCancel}\n                          footer={[\n                            <Button key='share' onClick={() => this.handleShare()}>\n                              {this.state.shared ? \"Stop Sharing Info\" : \"Share Your Info\"}\n                            </Button>, \n                            <Button key=\"back\" onClick={this.handleCancel}>\n                              Return\n                            </Button>\n                          ]}\n                        >\n                          <List size=\"large\">\n                            {this.state.messages.map(message => {\n                                return (\n                                  <div>\n                                     {message.author}: {message.message}\n                                  </div>\n                                );\n                             })\n                           }\n                          </List>\n                          <Search\n                            size=\"large\"\n                            placeholder=\"Enter here\"\n                            value={this.state.message || ''}\n                            enterButton=\"Send\"\n                            onChange={this.onChange}\n                            onSearch={this.handleEnter}\n                          />\n                        </Modal>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Messages;\n","import React from 'react';\nimport { Form, Button, Input } from 'antd';\n\nclass AddInfoForm extends React.Component {\n    handleAdditionalInfoOk = async (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.setAddInfo(values);\n            }\n        })\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const address = this.props.user.address ? this.props.user.address.split(',') : ['', '', '', '', ''];\n        let addr1, addr2, city, state, zip;\n        if (address.length == 5) {\n            [addr1, addr2, city, state, zip] = address;\n        } else {\n            [addr1, city, state, zip] = address;\n        }\n        return (\n            <Form name='addInfo-form' onSubmit={this.handleAdditionalInfoOk}>\n                <Form.Item label='Username'>\n                    {getFieldDecorator('username', {\n                        rules: [{required: true, message: 'Please input your username'}],\n                        initialValue: this.props.user.username,\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Address Line 1'>\n                    {getFieldDecorator('addr1', {\n                        rules: [{required: true, message: 'Please input an Address'}],\n                        initialValue: addr1,\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Address Line 2'>\n                    {getFieldDecorator('addr2', {\n                        initialValue: addr2,\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='City'>\n                    {getFieldDecorator('city', {\n                        rules: [{required: true, message: 'Please input a city'}],\n                        initialValue: city,\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='State'>\n                    {getFieldDecorator('state', {\n                        rules: [{required: true, message: 'Please input a state'}],\n                        initialValue: state,\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Zip Code'>\n                    {getFieldDecorator('zip', {\n                        rules: [{required: true, message: 'Please input a zip code'}],\n                        initialValue: zip,\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Bio'>\n                    {getFieldDecorator('bio', {\n                        rules: [{required: true, message: 'Please write a short description about yourself'}],\n                        initialValue: this.props.user.bio,\n                    })(\n                        <Input.TextArea rows={4} />\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    <Button type='primary' htmlType='submit'>Ok</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nconst WrappedForm = Form.create({ name: 'addInfoForm' })(AddInfoForm);\nexport default WrappedForm;\n","import React from 'react';\nimport {\n    Icon,\n    Layout,\n    Typography,\n    Carousel,\n    Empty,\n    Modal,\n    Upload,\n    Button,\n    message,\n    Input\n} from 'antd';\nimport AddInfoForm from './addInfoForm';\nimport { Link, BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport './Profile.css';\nimport config from '../config.json';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Search } = Input;\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nextHosting = this.nextHosting.bind(this);\n        this.prevHosting = this.prevHosting.bind(this);\n        this.nextFavorites = this.nextFavorites.bind(this);\n        this.prevFavorites = this.prevFavorites.bind(this);\n        this.setNewProfilePicture = this.setNewProfilePicture.bind(this);\n        const values = queryString.parse(props.location.search);\n        this.state.userId = values.id;\n        this.carouselHosting = React.createRef();\n        this.carouselFavorites = React.createRef();\n        console.log(props);\n    }\n\n    state = {\n        userId: null,\n        isProfileOwner: false,\n        showProfileModal: false,\n        showAdditionalInfoModal: false,\n    };\n\n    componentDidMount() {\n        axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n            .then((user) => {\n                console.log(user);\n                this.props.setUser(user.data);\n            })\n            .then(() => {\n                return axios({ \n                    url: `${config.backend_url}/profile/getProfileUserInformation?id=${this.state.userId}`,\n                    method: 'GET',\n                })\n            })\n            .then((userInfo) => {\n                this.setState({ userInfo: userInfo.data });\n                if (this.props.user) {\n                    this.setState({ isProfileOwner: userInfo.data._id === this.props.user._id })  // check if the profile belongs to the current user.\n                    if (userInfo.data.latitude && userInfo.data.longitude) {\n                        return axios({\n                            url: `${config.backend_url}/profile/distance?lat=${userInfo.data.latitude}&long=${userInfo.data.longitude}`,\n                            method: 'GET'\n                        })\n                    }\n                }\n                return null;\n            })\n            .then((distance) => {\n                if (distance) {\n                    this.setState({ distance: distance.data.distance.toString() });\n                }\n            })\n            .then(() => { // TODO: add or condition once we figure out if they shared their private info\n                console.log(this.state.userInfo)\n                if (this.state.isProfileOwner && (!this.state.userInfo.username || !this.state.userInfo.bio || (!this.state.userInfo.address && !this.state.userInfo.city))) {\n                    this.setState({ showAdditionalInfoModal: true })\n                }\n            })\n            .then(() => {\n                this.getGameList('hosting');\n            })\n            .then(() => {\n                this.getGameList('favorites');\n                console.log(this.state)\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n\n    }\n\n    nextHosting() {\n        this.carouselHosting.next();\n    }\n\n    prevHosting() {\n        this.carouselHosting.prev();\n    }\n\n    nextFavorites() {\n        this.carouselFavorites.next();\n    }\n\n    prevFavorites() {\n        this.carouselFavorites.prev();\n    }\n\n    // TODO: fix this part\n    onUsernameEdit = (username) => {\n        const userInfo = { ...this.state.userInfo, username }\n        axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\n            .then(res => {\n                this.setState({ userInfo });\n            })\n            .catch(err => {\n                message.error('A user with this username already exists. Please choose another.')\n            })\n    }\n\n    onBioEdit = async (bio) => {\n        const userInfo = { ...this.state.userInfo, bio }\n        this.setState({ userInfo });\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    removeCard = async (type, id) => {\n        console.log('removing card');\n        let removeInd;\n        const removedType = this.state.userInfo[type].filter((val, ind, arr) => {\n            if (val !== id.toString()) {\n                return true\n            } else {\n                removeInd = ind;\n                return false;\n            }\n        });\n        const gameInfo = this.state[type];\n        gameInfo.splice(2 * removeInd, 2);\n        const userInfo = { ...this.state.userInfo }\n        userInfo[type] = { id, operation: 'remove'};\n        this.setState({ userInfo, [type]: gameInfo });\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    openProfileModal = () => {\n        this.setState({ showProfileModal: true });\n    }\n\n    openAdditionalInfoModal = () => {\n        this.setState({ showAdditionalInfoModal: true });\n    }\n\n    closeAdditionalInfoModal = () => {\n        this.setState({ showAdditionalInfoModal: false });\n    }\n\n    handleProfileModalCancel = () => {\n        this.setState({ showProfileModal: false });\n    }\n\n    handleProfileModalOk = async (e) => {\n        e.preventDefault();\n        console.log('handleok')\n        if (!this.state.newProfilePicture) {\n            this.setState({ showProfileModal: false });\n        } else {\n            const formData = new FormData();\n            formData.append('myImage', this.state.newProfilePicture);\n            this.setState({ newProfilePicture: undefined });\n            const header = {\n                headers: {\n                    'content-type': 'multipart/form-data',\n                }\n            }\n            axios.post(`${config.backend_url}/profile/editProfilePicture`, formData, header)\n                .then((url) => {\n                    this.setState({ showProfileModal: false });\n                });\n        }\n    }\n\n    setAddInfo = async (vals) => {\n        console.log(vals);\n        const { username, addr1, addr2, city, state, zip, bio } = vals;\n        const address = addr2 ? `${addr1}, ${addr2}, ${city}, ${state}, ${zip}` : `${addr1}, ${city}, ${state}, ${zip}`;\n        const userInfo = { ...this.state.userInfo, address, username, city, bio };\n        axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\n            .then(() => {\n                this.setState({ userInfo, showAdditionalInfoModal: false });\n            })\n            .catch(() => {\n                message.error('A user with this username already exists. Please choose another.');\n            })\n    }\n\n    getGameList = async (type) => {\n        if (!this.state.userInfo || !this.state.userInfo[type]) {   // TEST:  if (!this.state.userInfo || !this.state.userInfo[type])\n            return <Empty />;\n        }\n        const idList = this.state.userInfo[type];\n        const InfoPromises = [];\n        for (let i = 0; i < idList.length; i += 1) {\n            const gameReq = axios.get(`${config.backend_url}/igdb/game?id=${idList[i]}`);\n            const coverReq = axios.get(`${config.backend_url}/igdb/cover?id=${idList[i]}`);\n            InfoPromises.push(gameReq, coverReq);\n        }\n        const gameInfo = await Promise.all(InfoPromises);\n        type === 'hosting' ? this.setState({ 'hosting': gameInfo }) : this.setState({ 'favorites': gameInfo });\n    }\n\n    setNewProfilePicture = ({ file, onSuccess}) => {\n        this.setState({ newProfilePicture: file })\n        console.log(this.state.newProfilePicture)\n        setTimeout(() => {\n            onSuccess('ok');\n        }, 0);\n    }\n\n    handleUploadChange = info => {\n        let fileList = [info.fileList];\n        this.setState({ fileList: fileList[0] });\n    }\n\n    search(value) {\n        fetch(`${config.backend_url}/profile/searchByUser?nickname=${value}`)\n            .then(res => res.json())\n          .then(res => {\n                this.setState({ userId: res });\n                this.componentDidMount();\n                console.log(\"Found user with id \" + res)\n            })\n          .catch(() => {\n              message.error(\"User with that name not found\");\n              console.log(\"Did not find user with name \" + value);\n          });\n      }\n\n    render() {\n        \n        let createCards = (type) => {\n            console.log('creatingCards')\n            const gameInfo = this.state[type];\n            if (!gameInfo) return;\n            const cards = [];\n            for (let i = 0; i < gameInfo.length; i += 2) {\n                cards.push(\n                    <div className=\"card\" key={i}>\n                        <Link to={`/singlegame/?id=${gameInfo[i].data.id}`}>\n                            <img src={\"http://\" + gameInfo[i+1].data} />\n                        </Link>\n                        <div className=\"card-text-box\">\n                            <span className=\"card-text\">{gameInfo[i].data.name}</span>\n                            <br/>\n                            { this.state.isProfileOwner && \n                                <Text className='card-text' style={{ cursor: 'pointer' }}onClick={ () => { this.removeCard(type, gameInfo[i].data.id) }}>Remove</Text>\n                            }\n                        </div>\n                    </div>\n                )\n            }\n            return cards;\n        }\n        //const hostingCards = createCards('testing') || [];      // TEST\n        // const favoritesCards = createCards('testing') || [];    // TEST\n        const hostingCards = createCards('hosting') || [];   // NOT TEST\n        const favoritesCards = createCards('favorites') || [];  // NOT TEST\n        const props = {\n            dots: true,\n            speed: 500,\n            circular: false,\n            slidesToScroll: 4,\n            slidesToShow: 4\n        };\n        return (\n            <div id='main'>\n                <Modal\n                    title='Please add some additional Information'\n                    visible={this.state.showAdditionalInfoModal}\n                    footer={[]}\n                >\n                    <Text>Other users will only be able to see the City you are in. You can choose to share your full address with other users.</Text>\n                    <AddInfoForm setAddInfo={this.setAddInfo} user={this.props.user} />\n                </Modal>\n                <Modal \n                    title='Change Profile Picture' \n                    visible={this.state.showProfileModal}\n                    onCancel={this.handleProfileModalCancel}\n                    footer={[\n                        <Button key='cancel' onClick={this.handleProfileModalCancel}>Cancel</Button>,\n                        <Button key='submit' form='profile-form' htmlType='submit'>Ok</Button>\n                    ]}\n                >\n                    <form id='profile-form' onSubmit={this.handleProfileModalOk}>\n                        <Upload.Dragger \n                            name='file' \n                            multiple={false} \n                            customRequest={this.setNewProfilePicture} \n                            onChange={this.handleUploadChange}\n                            accept='image/*'\n                            fileList={this.state.fileList}>\n                        <p className=\"ant-upload-text\">Click or drag a picture</p>\n                        </Upload.Dragger>\n                    </form>\n                </Modal>\n                <div className='user_info'>\n                    { (!this.state.userInfo || !this.state.userInfo.profilePicture)&& <Icon style={{ fontSize: '150px' }} type=\"user\" />}\n                    { this.state.userInfo && this.state.userInfo.profilePicture && \n                        <div>\n                            <img className='profile_image' src={ this.state.userInfo.profilePicture } />\n                        </div>\n                    }\n                    { this.state.isProfileOwner &&\n                        <Text id='change_profile_pic' onClick={this.openProfileModal}>Change Profile Picture</Text>\n                    }\n                    <div id='name_and_loc'>\n                        <div id='name'>\n                            { (this.state.userInfo && this.state.userInfo.username) && (this.state.isProfileOwner \n                                ? <Title editable={{ onChange: this.onUsernameEdit }}>{ this.state.userInfo.username }</Title>\n                                : <Title>{ this.state.userInfo.username }</Title>)\n                            }\n                        </div>\n                        <div align=\"right\">\n                        <Search\n                            placeholder=\"search user\" \n                            onSearch={value => this.search(value)}\n                            style={{ \n                            width: 200,\n                            justify: \"right\" }}\n                            enterButton/>\n                        </div>\n                        <br />\n                        <div id='loc'>\n                            { (this.state.userInfo && (this.state.userInfo.address))\n                                ? <Title level={3}>{ this.state.userInfo.address }</Title>\n                                : (this.state.userInfo \n                                    ? <Title level={3}>{ this.state.userInfo.city }</Title> \n                                    : <></>)\n                            }\n                        </div>\n                        { this.state.distance && \n                            <Text id='distance'>{ this.state.distance } miles away</Text>\n                        }\n                    </div>\n                    { this.state.isProfileOwner && \n                        <Button type='primary' id='edit' onClick={this.openAdditionalInfoModal}>Edit profile</Button>\n                    }\n                </div>\n                <hr />\n                <div id='hosting'>\n                    <Title level={2}>Games Hosting</Title>\n                    <hr />\n                    <div className='games_list'>\n                        <div className='games_list_children'>\n                            { hostingCards.length ?\n                            <>\n                                <div className='games_list_carousel'>\n                                    <Carousel ref={ node => (this.carouselHosting = node) } { ...props } slidesToShow={ Math.min(4, hostingCards.length) } >\n                                        { hostingCards }\n                                    </Carousel>\n                                </div>\n                                <br />\n                                <div className='scroll-group'>\n                                    <Icon type='left-circle' className='scroll' onClick={ this.prevHosting } />\n                                    <Icon type='right-circle' className='scroll' onClick={ this.nextHosting } />\n                                </div>\n                            </>\n                            : <Empty />\n                            }\n                        </div>\n                    </div>\n                    <Title level={2}>Favorites</Title>\n                    <hr />\n                    <div className='games_list'>\n                        <div className='games_list_children'>\n                            { favoritesCards.length ? \n                            <>\n                                <div className='games_list_carousel'>\n                                    <Carousel ref={ node => (this.carouselFavorites = node) } { ...props } slidesToShow={ Math.min(4, favoritesCards.length) } >\n                                        { favoritesCards }\n                                    </Carousel>\n                                </div>\n                                <br/>\n                                <div className='scroll-group'>\n                                    <Icon type='left-circle' className='scroll' onClick={ this.prevFavorites } />\n                                    <Icon type='right-circle' className='scroll' onClick={ this.nextFavorites } /> \n                                </div>\n                            </>\n                            : <Empty />\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div id='bio'>\n                    \n                    <div id='bio_title'>\n                        <Title level={3}>bio</Title>\n                    </div>\n                    <div id='bio_info'>\n                        { (this.state.userInfo && this.state.userInfo.bio) && ( this.state.isProfileOwner\n                            ? <Paragraph ellipsis={{ rows: 5, expandable: true }} editable={{ onChange: this.onBioEdit }}>{ this.state.userInfo.bio }</Paragraph>\n                            : <Paragraph ellipsis={{ rows: 5, expandable: true }}>{ this.state.userInfo.bio }</Paragraph>)\n                        }\n                    </div>\n                    { (this.props.user && !this.state.isProfileOwner) &&\n                        <Link to={ `/messages?id=${ this.state.userId }`}>\n                            <Title level={3}><Icon type=\"mail\" /> Message this host</Title>\n                        </Link>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from \"react\";\nimport {\n  Menu,\n  Icon,\n  Input,\n  Dropdown,\n  Row,\n  Col,\n  Typography,\n  Layout,\n  Button,\n  Carousel,\n  Avatar\n} from \"antd\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Games.css\";\nimport config from '../config.json'\n\nconst { SubMenu } = Menu;\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\nclass Games extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n    this.limit = \"50\";\n    this.state = {\n      apiResponse: [],\n      title: \"\"\n    };\n  }\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  genre_filter = (\n    <Menu>\n      <SubMenu title=\"A-I\">\n        <Menu.Item onClick={() => this.genre(`adventure`)}>Adventure</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`arcade`)}>Arcade</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`fighting`)}>Fighting</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`hack-and-slash-beat-em-up`)}>\n          Hack-and-Slash / Beat-Em-Up\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`indie`)}>Indie</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"M-P\">\n        <Menu.Item onClick={() => this.genre(`music`)}>Music</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`pinball`)}>Pinball</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`platform`)}>Platform</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`point-and-click`)}>\n          Point-and-Click\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`puzzle`)}>Puzzle</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"Q-R\">\n        <Menu.Item onClick={() => this.genre(`quiz-trivia`)}>\n          Quiz / Trivia\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`racing`)}>Racing</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`real-time-strategy-rts`)}>\n          RTS\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`role-playing-rpg`)}>\n          RPG\n        </Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"S\">\n        <Menu.Item onClick={() => this.genre(`shooter`)}>Shooter</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`simulator`)}>Simulator</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`sport`)}>Sport</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`strategy`)}>Strategy</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"T-V\">\n        <Menu.Item onClick={() => this.genre(`tactical`)}>Tactical</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`turn-based-strategy-tbs`)}>\n          Turn-Based\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`visual-novel`)}>\n          Visual-Novel\n        </Menu.Item>\n      </SubMenu>\n    </Menu>\n  );\n\n  search(value) {\n    this.state.title = `Search for: \"${value}\"`;\n    fetch(`${config.backend_url}/igdb/search?title=${value}`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  popular() {\n    this.state.title = `Most Popular`;\n    fetch(`${config.backend_url}/igdb/popular?limit=${this.limit}`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  genre(value) {\n    this.state.title = `Genre: \"${value}\"`;\n    fetch(\n      `${config.backend_url}/igdb/searchbyGenre?genre=${value}&limit=${this.limit}`\n    )\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  recommended() {\n    this.state.title = `Recommended`;\n    fetch(`${config.backend_url}/profile/getGenreHistory`)\n      .then(res => res.json())\n      .then(data => {\n          console.log(data);\n          const recommended = { genres: data, limit: this.limit }\n          axios.post(`${config.backend_url}/igdb/recommendedGames`, recommended)\n            .then(data => {\n              console.log(data.data);\n              this.setState({ apiResponse: data.data });\n            })\n            .catch(err => console.log(`Error is: ${err}`));\n        })\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n    this.popular();\n  }\n\n  render() {\n    const props = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 6\n    };\n    return (\n      <div>\n        <br></br>\n        <Row>\n          <Col span={18}>\n            <div>\n              <Text>Browse By </Text>\n              <Button onClick={() => this.popular()}>popular</Button>\n              <Dropdown overlay={this.genre_filter}>\n                <Button>\n                  genre <Icon type=\"down\" />\n                </Button>\n              </Dropdown>\n              <Button onClick={() => this.recommended()}>recommended</Button>\n            </div>\n          </Col>\n          <Col span={6}>\n            <Search\n              placeholder=\"Search by Name\"\n              onSearch={value => this.search(value)}\n            />\n          </Col>\n        </Row>\n        <br></br>\n        <Title>{this.state.title}</Title>\n        <Carousel\n          class=\"carousel\"\n          ref={node => (this.carousel = node)}\n          {...props}\n        >\n          {this.state.apiResponse.map(elem => {\n            return (\n              <div className=\"image-container\">\n                <Link to={`/singlegame/?id=${elem.id}`}>\n                  <img className=\"elem-image\" src={\"http://\" + elem.coverUrl} />\n                </Link>\n                <div className=\"name-text-box\">\n                  <p className=\"name-text\">{elem.name}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Carousel>\n          <Avatar className=\"arrow-left\" size=\"large\" icon=\"left-circle\" onClick={this.previous} /> \n          <Avatar className=\"arrow-right\" size=\"large\" icon=\"right-circle\" onClick={this.next} />\n        {/* <div></div> */}\n      </div>\n    );\n  }\n}\n\nexport default Games;\n","import React from \"react\";\nimport {\n  Menu,\n  Icon,\n  Layout,\n  Typography,\n  Card,\n  Carousel,\n  Empty,\n  Modal,\n  Avatar,\n  Form,\n  Upload,\n  Button,\n  message\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport AddInfoForm from \"./addInfoForm\";\n\nimport { Link, BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport \"./Hosts.css\";\nimport config from \"../config.json\";\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nclass Hosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nextHosting = this.nextHosting.bind(this);\n    this.prevHosting = this.prevHosting.bind(this);\n    const values = queryString.parse(props.location.search);\n    this.state.userId = values.id;\n    this.carouselHosting = React.createRef();\n    console.log(props);\n  }\n  state = { userId: null };\n\n  componentDidMount() {\n    // get host infos\n    axios\n      .get(`${config.backend_url}/profile/getAllUsers`)\n      // .get(`${config.backend_url}/profile/getCurrentUserInformation`)\n      // .then(user => {\n      //   console.log(user);\n      //   this.props.setUser(user.data);\n      // })\n      // .then(() => {\n      //   return axios({\n      //     url: `${config.backend_url}/profile/getAllUsers`,\n      //     method: \"GET\"\n      //   });\n      // })\n      .then(results => {\n        console.log(results.data);\n        this.setState({ results: results.data });\n        this.getHostList(results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  nextHosting() {\n    this.carouselHosting.next();\n  }\n\n  prevHosting() {\n    this.carouselHosting.prev();\n  }\n\n  getHostList = async results => {\n    if (!this.state.results) {\n      return <Empty />;\n    }\n    const hostList = this.state.results;\n    console.log(hostList);\n    const HostPromises = [];\n    for (let i = 0; i < hostList.length; i += 1) {\n      var currentUser = hostList[i];\n      console.log(currentUser);\n      const hostReq = axios.get(\n        `${config.backend_url}/profile/getProfileUserInformation?id=${currentUser._id}`\n      );\n      if (currentUser.hosting != []) {\n        HostPromises.push(hostReq);\n      }\n      // HostPromises.push(hostReq);\n    }\n    const hostInfo = await Promise.all(HostPromises);\n    this.setState({ hosts: hostInfo });\n  };\n\n  render() {\n    let createHostCards = () => {\n      console.log(\"creatingHostCards\");\n      const hostInfo = this.state.hosts;\n      console.log(hostInfo);\n      if (!hostInfo) return;\n      const cards = [];\n      for (let i = 0; i < hostInfo.length; i += 1) {\n        cards.push(\n          <div className=\"card\">\n            <Link to={`/profile/?id=${hostInfo[i].data._id}`}>\n              <img src={hostInfo[i].data.profilePicture} />\n              <div className=\"card-text-box\">\n                <Text className=\"card-text\">{hostInfo[i].data.username}</Text>\n              </div>\n            </Link>\n          </div>\n        );\n      }\n      return cards;\n    };\n    const hostCards = createHostCards() || [];\n    // const gameCards = createGameCards(\"hosting\") || []; // NOT TEST\n    const props = {\n      dots: true,\n      speed: 500,\n      circular: false,\n      slidesToScroll: 4\n    };\n    return (\n      // clicking on a card links to profile.js\n      <div>\n        <hr />\n        <Title level={2}>Hosts for You</Title>\n        <hr />\n        <div>\n          <div>\n            {hostCards.length ? (\n              <>\n                <div>\n                  <Carousel\n                    ref={node => (this.carouselHosting = node)}\n                    {...props}\n                    slidesToShow={Math.min(4, hostCards.length)}\n                  >\n                    {hostCards}\n                  </Carousel>\n                </div>\n                <br />\n                <div className=\"scroll-group\">\n                  <Icon\n                    type=\"left-circle\"\n                    className=\"scroll\"\n                    onClick={this.prevHosting}\n                  />\n                  <Icon\n                    type=\"right-circle\"\n                    className=\"scroll\"\n                    onClick={this.nextHosting}\n                  />\n                </div>\n              </>\n            ) : (\n              <Empty />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hosts;\n","import React, { useDebugValue } from \"react\";\nimport {\n  Card,\n  Descriptions,\n  Tag,\n  Rate,\n  Icon,\n  Avatar,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Layout,\n  Input,\n  Carousel\n} from \"antd\";\nimport axios from 'axios';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport FacebookLoginButton from \"./FacebookLoginButton\";\nimport config from \"../config.json\";\n\nimport \"./SingleGame.css\";\n\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\nconst queryString = require('query-string');\n\nclass SingleGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: {},\n      apiScreenshots: [],\n      apiAges: {},\n      apiGenre: [],\n      apiPlatforms: {},\n      coverUrl: \"\",\n\n      hosting: false,\n      hosts: [],\n      liked: false,\n      likes: 0,\n\n      hostData: {},\n      userInfo: {},\n      userHosting: [],\n      userFavorites: []\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n    this.gid = queryString.parse(this.props.location.search).id;\n    this.hostCards = [];\n    this.genreIds = [];\n  }\n\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  convertDate(timestamp) {\n    var ts = new Date(timestamp)\n      .toDateString()\n      .split(\" \")\n      .slice(1)\n      .join(\" \");\n    return ts;\n  }\n\n  getGame() {\n    var url =\n      `http://localhost:9000/igdb/game?id=` +\n      this.gid;\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          apiResponse: data,\n          apiScreenshots: data.screenshots,\n          apiGenre: data.genres, \n          apiPlatforms: data.platforms[0][0]\n        });\n        if (data.screenshots) {\n          this.setState({apiScreenshots: data.screenshots});\n        }\n        if (data.age_ratings) {\n          this.setState({apiAges: data.age_ratings[0][0]});\n        }\n        this.state.apiGenre.map(elem => {\n          this.genreIds.push(elem[0].id);\n        })\n        const genreAdd = { \"genres\" : this.genreIds }\n        axios.post(`${config.backend_url}/profile/incrementGenreHistory`, genreAdd)\n           .then(res => {\n             console.log(res);\n           })\n           .catch(err => {\n             console.warn(err);\n        });\n      }\n      )\n      .catch(err => console.log(`Error is: ${err}`));\n    \n  }\n\n  getHost(elem) {\n    axios.get(`${config.backend_url}/profile/getProfileUserInformation?id=${elem}`)\n      .then((userInfo) => {\n        console.log(\"Adding host data\");\n        console.log(userInfo.data);\n        this.setState({hostData: userInfo.data})\n        this.hostCards.push({\n          id: elem, \n          pic: userInfo.data.profilePicture,\n          name: userInfo.data.username\n        })\n        console.log(this.hostCards);\n      }) \n      .catch(err => console.warn(err));\n  }\n  cover() {\n    var url =\n      `http://localhost:9000/igdb/cover?id=` +\n      this.gid;\n    fetch(url)\n      .then(res => res.text())\n      .then(data => this.setState({ coverUrl: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  hostGame = async () => {\n    const userId = this.props.user._id;\n    const id = this.gid;\n    console.log(\"Adding Host for game \" + id + \" for user \" + userId);\n    await axios.post(`${config.backend_url}/games/addHost`, \n      null, \n      { params: {id, userId}})\n      .then(res => {\n        this.setState( {hosting: true});\n\n        console.log(res);\n      })\n      .catch(err => console.warn(err));\n    const userInfo = {...this.state.userInfo, hosting: { id: id, operation: \"add\"}};\n    axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\n      .then(res => {\n        this.setState({ userInfo })\n        console.log(res);\n      })\n      .catch(err => {\n        console.warn(err);\n      });\n  }\n\n  unhostGame = async () => {\n    const userId = this.props.user._id;\n    const id = this.gid;\n    console.log(\"Removing Host for game \" + id + \" for user \" + userId);\n    await axios.post(`${config.backend_url}/games/removeHost`, \n      null, \n      { params: {id, userId}})\n      .then(res => {\n        this.setState( {hosting: false})\n        console.log(res);\n      })\n      .catch(err => console.warn(err));\n    const userInfo = {...this.state.userInfo, hosting: { id: id, operation: \"remove\"}};\n    axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\n      .then(res => {\n        this.setState({ userInfo })\n        console.log(res);\n      })\n      .catch(err => {\n        console.warn(err)\n      });\n  }\n\n  initialize() {\n    var url = `${config.backend_url}/games/getGameInfo?id=${this.gid}`\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.checkHost(data.hosts);\n        this.setState({ \n          likes: data.likes,\n          userHosting: data.hosts});\n        console.log(data);\n        this.state.userHosting.map(elem => {\n          console.log(\"Processing host \" + elem);\n          this.getHost(elem);\n        })\n      })\n      .catch(err => console.warn(err));\n    axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n      .then((userInfo) => {\n        console.log(userInfo);\n        this.setState({ \n          userInfo: userInfo.data,\n          userFavorites: userInfo.data.favorites});\n        this.checkFavorite();\n      })\n      .catch(err => console.warn(err));\n  }\n\n  checkHost(getHosts) {\n    this.setState({ hosts: getHosts});\n    const userId = this.props.user._id;\n    if(getHosts.indexOf(userId) > -1)\n      this.state.hosting = true;\n    console.log(this.state.hosts);\n    console.log(\"Hosting is \" + this.state.hosting);\n  }\n  \n  checkFavorite() {\n    if(this.state.userFavorites.indexOf(this.gid) > -1){\n      this.setState({ liked: true});\n      console.log(\"User has liked this game\");\n    }\n  }\n\n  favorite = () => {\n    if(!this.state.liked){\n      axios.post(`${config.backend_url}/games/IncOrDecLikes?id=${this.gid}&inc=true`)\n            .then(res => {\n                this.setState({ likes: this.state.likes + 1})\n                console.log(res);\n            })\n            .catch(err => {\n                console.warn(err)\n            });\n    }\n    else{\n      axios.post(`${config.backend_url}/games/IncOrDecLikes?id=${this.gid}&inc=false`)\n            .then(res => {\n                this.setState({ likes: this.state.likes - 1})\n                console.log(res);\n            })\n            .catch(err => {\n                console.warn(err)\n            });\n    }\n    this.setState( {liked: !this.state.liked});\n  }\n\n\n  componentDidMount() {\n    this.initialize();\n    console.log(\"Hosts are\" + this.state.userHosting);\n    this.getGame();\n    this.cover();\n  }\n\n  render() {\n    const carouselProps = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n      <Content>\n        <Row>\n          <Col span={8} alignItems=\"top\">\n            <div class=\"container\">\n              <img\n                height=\"375\"\n                width=\"260\"\n                src={\"http://\" + this.state.coverUrl}\n              />\n              <br />\n              <div class=\"small-container\">\n                {this.props.user ?\n                <Rate character={<Icon type=\"heart\" />} count={1} \n                value={this.state.liked} onChange={this.favorite}/> \n                : <Rate disabled character={<Icon type=\"heart\" />} count={1}/>}\n                <span>{this.state.likes}</span>\n              </div>\n              <br />\n              <Card title=\"Where To Play\" style={{ width: 300 }}>\n                  {this.hostCards ?\n                  this.hostCards.map(elem => {\n                    if(elem.id != this.state.userInfo._id){\n                      console.log(\"Displaying host \" + elem);\n                      return (\n                        <div align=\"center\">\n                          <Link to={`/profile/?id=${elem.id}`}> \n                            <img className=\"host-image\" src={elem.pic}/>\n                            <Tag>{elem.name}</Tag>\n                          </Link>\n                        </div>\n                        );\n                    }\n                  }): false}\n              </Card>\n            </div>\n          </Col>\n          <Col span={8}>\n            <div class=\"container\">\n              <Title>{this.state.apiResponse.name}</Title>\n              <br />\n              <Text>{this.state.apiResponse.summary}</Text>\n              <br />\n              <Title level={2}>Screencap</Title>\n            </div>\n            <br />\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n              <Col span={2}>\n                <Avatar\n                  className=\"arrow-left\"\n                  icon=\"left-circle\"\n                  onClick={this.previous}\n                />\n              </Col>\n\n              <Col span={20}>\n                <Carousel\n                  class=\"carousel\"\n                  ref={node => (this.carousel = node)}\n                  {...carouselProps}\n                >\n                  {this.state.apiScreenshots ?\n                  this.state.apiScreenshots.map(elem => {\n                    return (\n                      <div align=\"center\" className=\"carousel-container\">\n                        <img\n                          className=\"image-container\"\n                          src={\n                            \"http:\" + elem[0].url.replace(\"t_thumb\", \"t_720p\")\n                          }\n                        />\n                      </div>\n                    );\n                  }): false}\n                </Carousel>\n              </Col>\n              <Col span={2}>\n                <Avatar\n                  className=\"arrow-right\"\n                  icon=\"right-circle\"\n                  onClick={this.next}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={8}>\n            <div class=\"container\">\n              { this.props.user ? \n                  this.state.hosting ?\n                    <Button onClick={this.unhostGame}>Stop Hosting</Button>\n                    :<Button onClick={this.hostGame}>Host</Button>\n                  :<a href={`${config.backend_url}/auth/facebook`}>\n                    <Button>Log in with Facebook</Button>\n                  </a>\n              }\n              <br/>\n              <Card title=\"Details\" style={{ width: 350 }}>\n                <Descriptions>\n                  <Descriptions.Item label=\"platform\">\n                    {this.state.apiPlatforms.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"version\">\n                    {this.state.apiPlatforms.versions}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"release date\">\n                    {this.convertDate(\n                      this.state.apiResponse.first_release_date * 1000\n                    )}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"rating\">\n                    {this.state.apiResponse.rating_count}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"suitable for\">\n                    {this.state.apiAges.synopsis}\n                  </Descriptions.Item>\n                </Descriptions>\n                <div class=\"small-container\">\n                  {this.state.apiGenre.map(elem => {\n                    return (\n                      <Tag>{elem[0].name}</Tag>\n                    );\n                  })}\n                </div>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </Content>\n    );\n  }\n}\n\nexport default SingleGame;","import React, { Component } from 'react';\n\nexport default class FacebookLogin extends Component {\n\n  componentDidMount() {\n    document.addEventListener('FBObjectReady', this.initializeFacebookLogin);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('FBObjectReady', this.initializeFacebookLogin);\n  }\n\n  /**\n   * Init FB object and check Facebook Login status\n   */\n  initializeFacebookLogin = () => {\n    this.FB = window.FB;\n    this.checkLoginStatus();\n  }\n\n  /**\n   * Check login status\n   */\n  checkLoginStatus = () => {\n    this.FB.getLoginStatus(this.facebookLoginHandler);\n  }\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  facebookLogin = () => {\n    if (!this.FB) return;\n\n    this.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.facebookLoginHandler(response);\n      } else {\n        this.FB.login(this.facebookLoginHandler, {scope: 'public_profile'});\n      }\n    }, );\n  }\n\n  /**\n   * Handle login response\n   */\n  facebookLoginHandler = response => {\n    if (response.status === 'connected') {\n      this.FB.api('/me', userData => {\n        let result = {\n          ...response,\n          user: userData\n        };\n        this.props.onLogin(true, result);\n      });\n    } else {\n      this.props.onLogin(false);\n    }\n  }\n\n  render() {\n    let {children} = this.props;\n    return (\n      <div onClick={this.facebookLogin}>\n        {children}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Messages from \"./components/Messages\";\nimport Profile from \"./components/Profile\";\nimport Games from \"./components/Games\";\nimport Hosts from \"./components/Hosts\";\nimport SingleGame from \"./components/SingleGame\";\n\nclass App extends Component {\n  state = {\n    user: null\n  };\n\n  setUser = user => {\n    console.log(user);\n    this.setState({ user });\n  };\n\n  render() {\n    console.log(this.state.user);\n    return (\n      <HashRouter>\n        <div>\n          <Header user={this.state.user} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Home\n                  setUser={this.setUser}\n                  user={this.state.user}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              path=\"/inbox\"\n              render={props => <Messages user={this.state.user} {...props} />}\n            />\n            <Route\n              path=\"/messages\"\n              render={props => <Messages user={this.state.user} {...props} />}\n            />\n            <Route\n              path=\"/games\"\n              render={props => <Games user={this.state.user} {...props} />}\n            />\n            <Route\n              path=\"/people\"\n              render={props => <Hosts user={this.state.user} {...props} />}\n            />\n            <Route\n              path=\"/singlegame\"\n              render={props => <SingleGame user={this.state.user} {...props} />}\n            />\n            <Route\n              path=\"/profile\"\n              render={props => (\n                <Profile\n                  setUser={this.setUser}\n                  user={this.state.user}\n                  {...props}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}