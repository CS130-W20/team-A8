{"version":3,"sources":["components/Header.js","components/Home.js","components/Messages.js","components/addInfoForm.js","components/Profile.js","components/Games.js","components/FacebookLoginButton.js","components/SingleGame.js","App.js","serviceWorker.js","index.js"],"names":["Search","Title","header","props","console","log","user","pmenu","Item","to","_id","style","width","backgroundColor","float","color","position","left","top","level","theme","mode","lineHeight","align","key","type","overlay","className","onClick","e","preventDefault","placeholder","onSearch","value","right","Content","Home","padding","marginTop","href","config","backend_url","React","Component","Sider","Messages","state","apiResponse","title","this","fetch","then","res","json","data","setState","catch","err","partner","connect","inbox","minHeight","size","icon","defaultSelectedKeys","margin","background","ref","node","container","getChat","AddInfoForm","handleAdditionalInfoOk","a","form","validateFields","values","setAddInfo","getFieldDecorator","name","onSubmit","label","rules","required","message","htmlType","WrappedForm","create","Text","Paragraph","Profile","userId","isProfileOwner","showProfileModal","showAdditionalInfoModal","onUsernameEdit","username","userInfo","axios","post","ok","Error","error","onBioEdit","bio","removeCard","id","removedType","filter","val","ind","arr","toString","removeInd","gameInfo","splice","openProfileModal","openAdditionalInfoModal","closeAdditionalInfoModal","handleProfileModalOk","newProfilePicture","formData","FormData","append","undefined","headers","url","vals","addr1","addr2","city","zip","address","getGameList","idList","InfoPromises","i","length","gameReq","get","coverReq","push","Promise","all","setNewProfilePicture","file","onSuccess","setTimeout","handleUploadChange","info","fileList","nextHosting","bind","prevHosting","nextFavorites","prevFavorites","queryString","parse","location","search","carouselHosting","createRef","carouselFavorites","setUser","method","next","prev","createCards","cards","src","cursor","hostingCards","favoritesCards","dots","speed","circular","slidesToScroll","visible","footer","onCancel","handleProfileModalCancel","Dragger","multiple","customRequest","onChange","accept","profilePicture","fontSize","editable","slidesToShow","Math","min","ellipsis","rows","expandable","SubMenu","Games","genre_filter","genre","previous","carousel","limit","popular","span","class","infinite","map","elem","coverUrl","FacebookLogin","initializeFacebookLogin","FB","window","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","response","status","login","scope","api","userData","result","onLogin","document","addEventListener","removeEventListener","children","SingleGame","apiScreenshots","apiAges","apiDescription","apiGenre","apiPlatforms","descriptionFound","timestamp","Date","toDateString","split","slice","join","loginStatus","resultObject","URLSearchParams","screenshots","age_ratings","genres","platforms","text","getGame","getDescription","cover","alignItems","height","character","count","allowHalf","disabled","defaultValue","synopsis","justify","replace","onFacebookLogin","versions","convertDate","first_release_date","rating_count","App","Header","exact","path","render","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c398c37b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Avatar, Menu, Input, Typography, Icon, Dropdown } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\nconst { Title } = Typography;\n\n\nconst header = (props) => {\n  console.log(props.user)\n  const pmenu = (\n    <Menu>\n      <Menu.Item>\n        <Link to=\"/people\">hosts</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to={`/profile?id=${props.user._id}`}>profile</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/inbox\">inbox</Link>\n      </Menu.Item>\n    </Menu>\n  );\n  \n  return (\n    <div style={{ width: \"100%\", backgroundColor: '#041527'}}>\n      <div style={{ width: \"calc(100% - 250px)\" }}>\n        <Title style={{ float: \"left\", color: \"white\", position: 'absolute', left: '10px', top: '16px'}} level={4}>\n          GAMELINKS\n        </Title>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          //   defaultSelectedKeys={[\"0\"]}\n          style={{ lineHeight: \"64px\"}}\n          align=\"right\"\n        >\n        {/* <Menu.Item key=\"test\">\n          <Link to=\"/messages\">\n            Messages (Test)\n          </Link>\n        </Menu.Item> */}\n          <Menu.Item key=\"0\">\n            <Link to=\"/\">\n              <Icon type=\"home\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"1\">\n            <Dropdown overlay={pmenu}>\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                people\n                <Icon type=\"down\" />\n              </a>\n            </Dropdown>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/games\">games</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Link to=\"/lists\">lists</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n      <Search\n        placeholder=\"search\"\n        onSearch={value => console.log(value)}\n        style={{ width: 200, right: '10px', top: '16px', position: \"absolute\" }}\n      />\n    </div>\n  );\n};\n\nexport default header;\n","import React from \"react\";\nimport { Layout, Button, Carousel } from \"antd\";\nimport axios from 'axios';\nimport config from '../config.json';\n\nconst { Content } = Layout;\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n        <div align=\"center\">\n          <a href={`${config.backend_url}/auth/facebook`}><Button>Login with Facebook</Button></a>\n        </div>\n      </Content>\n    );\n  }\n};\n\nexport default Home;\n","import React from \"react\";\nimport { \n   Affix, \n   Avatar, \n   Layout, \n   Menu, \n   Breadcrumb, \n   Icon, \n   Input, \n   Card, \n   Button \n} from \"antd\";\nimport { Link, BrowserRouter, withRouter } from \"react-router-dom\";\nimport config from '../config.json'\n\nconst { Search } = Input;\nconst { Content, Sider } = Layout;\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: [],\n      title: \"\"\n    };\n  }\n\n  connect() {\n     this.state.title = `Connect`;\n     fetch(`${config.backend_url}/messaging/connectSocketIO`)\n       .then(res => res.json())\n       .then(data => this.setState({ apiResponse: data }))\n       .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  inbox() {\n    this.state.title = `Inbox`;\n    fetch(`${config.backend_url}/messaging/inbox`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  getChat(partner) {\n     this.state.title = `Chat`;\n     fetch(`${config.backend_url}/messaging/getChatHistory?id=${partner}`)\n       .then(res => res.json())\n       .then(data => this.setState({ apiResponse: data }))\n       .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n     this.connect();\n     this.inbox();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout style={{ minHeight: \"90vh\" }}>\n          <Sider>\n            <Avatar size={64} icon=\"user\" />\n            {/* <Menu mode=\"inline\">\n              <Menu.Item key=\"1\">\n                <Link to=\"/profile\">\n                  <Icon type=\"cross\" />\n                  <span>Close Chat</span>\n                </Link>\n              </Menu.Item>\n              \n            </Menu> */}\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"4\"]}>\n              <Menu.Item key=\"1\">\n                <Icon type=\"export\" />\n                <span className=\"nav-text\">refer host</span>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Icon type=\"home\" />\n                <span className=\"nav-text\">reservations</span>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Icon type=\"upload\" />\n                <span className=\"nav-text\">inbox</span>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Icon type=\"user\" />\n                <span className=\"nav-text\">back to profile</span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Content style={{ margin: \"0 16px\" }}>\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\n                <Breadcrumb.Item>Inbox</Breadcrumb.Item>\n                <Breadcrumb.Item>User</Breadcrumb.Item>\n              </Breadcrumb>\n              <div style={{ padding: 24, background: \"#fff\", minHeight: 475 }}>\n                <div\n                  className=\"scrollable-container\"\n                  ref={node => {\n                    this.container = node;\n                  }}\n                >\n                {/*\n                  <div className=\"background\">\n                    <Affix target={() => this.container}></Affix>\n                  </div>\n                */}\n                  <div className=\"p1\">\n                     <Card title=\"Person 1\">\n                        <Button onClick={() => this.getChat(\"5e38acfa52525645babd8719\")}>Click me!</Button>\n                     </Card>\n                  </div>\n                </div>\n              </div>\n              {/*\n              <Search\n                size=\"large\"\n                enterButton=\"Send\"\n                onSearch={value => console.log(value)}\n              />\n              */}\n            </Content>\n          </Layout>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Messages;\n","import React from 'react';\nimport { Form, Button, Input } from 'antd';\n\nclass AddInfoForm extends React.Component {\n    handleAdditionalInfoOk = async (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.setAddInfo(values);\n            }\n        })\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form name='addInfo-form' onSubmit={this.handleAdditionalInfoOk}>\n                <Form.Item label='Username'>\n                    {getFieldDecorator('username', {\n                        rules: [{required: true, message: 'Please input your username'}],\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Address Line 1'>\n                    {getFieldDecorator('addr1', {\n                        rules: [{required: true, message: 'Please input an Address'}],\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Address Line 2'>\n                    {getFieldDecorator('addr2', {\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='City'>\n                    {getFieldDecorator('city', {\n                        rules: [{required: true, message: 'Please input a city'}],\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='State'>\n                    {getFieldDecorator('state', {\n                        rules: [{required: true, message: 'Please input a state'}],\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Zip Code'>\n                    {getFieldDecorator('zip', {\n                        rules: [{required: true, message: 'Please input a zip code'}],\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item label='Bio'>\n                    {getFieldDecorator('bio', {\n                        rules: [{required: true, message: 'Please write a short description about yourself'}]\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    <Button type='primary' htmlType='submit'>Ok</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nconst WrappedForm = Form.create({ name: 'addInfoForm' })(AddInfoForm);\nexport default WrappedForm;\n","import React from 'react';\nimport {\n    Icon,\n    Layout,\n    Typography,\n    Carousel,\n    Empty,\n    Modal,\n    Upload,\n    Button,\n    message,\n} from 'antd';\nimport 'antd/dist/antd.css';\nimport AddInfoForm from './addInfoForm';\nimport { Link, BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport './Profile.css';\nimport config from '../config.json';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nextHosting = this.nextHosting.bind(this);\n        this.prevHosting = this.prevHosting.bind(this);\n        this.nextFavorites = this.nextFavorites.bind(this);\n        this.prevFavorites = this.prevFavorites.bind(this);\n        this.setNewProfilePicture = this.setNewProfilePicture.bind(this);\n        const values = queryString.parse(props.location.search);\n        this.state.userId = values.id;\n        this.carouselHosting = React.createRef();\n        this.carouselFavorites = React.createRef();\n        console.log(props);\n    }\n\n    state = {\n        userId: null,\n        isProfileOwner: false,\n        showProfileModal: false,\n        showAdditionalInfoModal: false,\n    };\n\n    componentDidMount() {\n        axios.get(`${config.backend_url}/profile/getCurrentUserInformation`)\n            .then((user) => {\n                console.log(user);\n                this.props.setUser(user.data);\n            })\n            .then(() => {\n                return axios({ \n                    url: `${config.backend_url}/profile/getProfileUserInformation?id=${this.state.userId}`,\n                    method: 'GET',\n                })\n            })\n            .then((userInfo) => {\n                console.log(userInfo.data._id);\n                this.setState({ userInfo: userInfo.data });\n                console.log(this.props.user);\n                console.log(userInfo.data._id === this.props.user._id)\n                if (this.props.user) {\n                    this.setState({ isProfileOwner: userInfo.data._id === this.props.user._id })  // check if the profile belongs to the current user.\n                }\n            })\n            .then(() => { // TODO: add or condition once we figure out if they shared their private info\n                console.log(this.state.userInfo)\n                if (this.state.isProfileOwner && (!this.state.userInfo.username || !this.state.userInfo.bio || (!this.state.userInfo.address && !this.state.userInfo.city))) {\n                    this.setState({ showAdditionalInfoModal: true })\n                }\n            })\n            .then(() => {\n                this.getGameList('hosting');\n            })\n            .then(() => {\n                this.getGameList('favorites');\n                console.log(this.state)\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n\n    }\n\n    nextHosting() {\n        this.carouselHosting.next();\n    }\n\n    prevHosting() {\n        this.carouselHosting.prev();\n    }\n\n    nextFavorites() {\n        this.carouselFavorites.next();\n    }\n\n    prevFavorites() {\n        this.carouselFavorites.prev();\n    }\n\n    // TODO: fix this part\n    onUsernameEdit = (username) => {\n        const userInfo = { ...this.state.userInfo, username }\n        axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\n            .then(res => {\n                if (!res.ok) throw new Error();\n                this.setState({ userInfo });\n            })\n            .catch(err => {\n                message.error('A user with this username already exists. Please choose another.')\n            })\n    }\n\n    onBioEdit = async (bio) => {\n        const userInfo = { ...this.state.userInfo, bio }\n        this.setState({ userInfo });\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    removeCard = async (type, id) => {\n        console.log('removing card');\n        let removeInd;\n        const removedType = this.state.userInfo[type].filter((val, ind, arr) => {\n            if (val !== id.toString()) {\n                return true\n            } else {\n                removeInd = ind;\n                return false;\n            }\n        });\n        const gameInfo = this.state[type];\n        gameInfo.splice(2 * removeInd, 2);\n        const userInfo = { ...this.state.userInfo }\n        userInfo[type] = removedType;\n        console.log(removedType);\n        this.setState({ userInfo, [type]: gameInfo });\n        await axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo);\n    }\n\n    openProfileModal = () => {\n        this.setState({ showProfileModal: true });\n    }\n\n    openAdditionalInfoModal = () => {\n        this.setState({ showAdditionalInfoModal: true });\n    }\n\n    closeAdditionalInfoModal = () => {\n        this.setState({ showAdditionalInfoModal: false });\n    }\n\n    handleProfileModalOk = async (e) => {\n        e.preventDefault();\n        console.log('handleok')\n        if (!this.state.newProfilePicture) {\n            this.setState({ showProfileModal: false });\n        } else {\n            const formData = new FormData();\n            formData.append('myImage', this.state.newProfilePicture);\n            this.setState({ newProfilePicture: undefined });\n            const header = {\n                headers: {\n                    'content-type': 'multipart/form-data',\n                }\n            }\n            axios.post(`${config.backend_url}/profile/editProfilePicture`, formData, header)\n                .then((url) => {\n                    this.setState({ showProfileModal: false });\n                });\n        }\n    }\n\n    setAddInfo = async (vals) => {\n        console.log(vals);\n        const { username, addr1, addr2, city, state, zip, bio } = vals;\n        const address = addr2 ? `${addr1}, ${addr2}, ${city}, ${state}, ${zip}` : `${addr1}, ${city}, ${state}, ${zip}`;\n        const userInfo = { ...this.state.userInfo, address, username, city, bio };\n        axios.post(`${config.backend_url}/profile/editUserInfo`, userInfo)\n            .then(() => {\n                this.setState({ userInfo, showAdditionalInfoModal: false });\n            })\n            .catch(() => {\n                message.error('A user with this username already exists. Please choose another.');\n            })\n    }\n\n    getGameList = async (type) => {\n        if (!this.state.userInfo || !this.state.userInfo[type]) {   // TEST:  if (!this.state.userInfo || !this.state.userInfo[type])\n            return <Empty />;\n        }\n        const idList = this.state.userInfo[type];\n        const InfoPromises = [];\n        for (let i = 0; i < idList.length; i += 1) {\n            const gameReq = axios.get(`${config.backend_url}/igdb/game?id=${idList[i]}`);\n            const coverReq = axios.get(`${config.backend_url}/igdb/cover?id=${idList[i]}`);\n            InfoPromises.push(gameReq, coverReq);\n        }\n        const gameInfo = await Promise.all(InfoPromises);\n        type === 'hosting' ? this.setState({ 'hosting': gameInfo }) : this.setState({ 'favorites': gameInfo });\n    }\n\n    setNewProfilePicture = ({ file, onSuccess}) => {\n        this.setState({ newProfilePicture: file })\n        console.log(this.state.newProfilePicture)\n        setTimeout(() => {\n            onSuccess('ok');\n        }, 0);\n    }\n\n    handleUploadChange = info => {\n        let fileList = [info.fileList];\n        this.setState({ fileList: fileList[0] });\n    }\n\n    render() {\n        let createCards = (type) => {\n            console.log('creatingCards')\n            const gameInfo = this.state[type];\n            if (!gameInfo) return;\n            const cards = [];\n            for (let i = 0; i < gameInfo.length; i += 2) {\n                cards.push(\n                    <div className=\"card\" key={i}>\n                        <Link to={`/singlegame/?id=${gameInfo[i].data.id}`}>\n                            <img src={\"http://\" + gameInfo[i+1].data} />\n                        </Link>\n                        <div className=\"name-text-box\">\n                            <a className=\"name-text\">{gameInfo[i].data.name}</a>\n                            <br/>\n                            { this.state.isProfileOwner && \n                                <Text className='name-text' style={{ cursor: 'pointer' }}onClick={ () => { this.removeCard(type, gameInfo[i].data.id) }}>Remove</Text>\n                            }\n                        </div>\n                    </div>\n                )\n            }\n            return cards;\n        }\n        //const hostingCards = createCards('testing') || [];      // TEST\n        // const favoritesCards = createCards('testing') || [];    // TEST\n        const hostingCards = createCards('hosting') || [];   // NOT TEST\n        const favoritesCards = createCards('favorites') || [];  // NOT TEST\n        const props = {\n            dots: true,\n            speed: 500,\n            circular: false,\n            slidesToScroll: 4\n        };\n        return (\n            <div id='main'>\n                <Modal\n                    title='Please add some additional Information'\n                    visible={this.state.showAdditionalInfoModal}\n                    footer={[]}\n                >\n                    <AddInfoForm setAddInfo={this.setAddInfo} />\n                </Modal>\n                <Modal \n                    title='Change Profile Picture' \n                    visible={this.state.showProfileModal}\n                    onCancel={this.handleProfileModalCancel}\n                    footer={[\n                        <Button key='cancel' onClick={this.handleProfileModalCancel}>Cancel</Button>,\n                        <Button key='submit' form='profile-form' htmlType='submit'>Ok</Button>\n                    ]}\n                >\n                    <form id='profile-form' onSubmit={this.handleProfileModalOk}>\n                        <Upload.Dragger \n                            name='file' \n                            multiple={false} \n                            customRequest={this.setNewProfilePicture} \n                            onChange={this.handleUploadChange}\n                            accept='image/*'\n                            fileList={this.state.fileList}>\n                        <p className=\"ant-upload-text\">Click or drag a picture</p>\n                        </Upload.Dragger>\n                    </form>\n                </Modal>\n                <div className='user_info'>\n                    { (!this.state.userInfo || !this.state.userInfo.profilePicture)&& <Icon style={{ fontSize: '150px' }} type=\"user\" />}\n                    { this.state.userInfo && this.state.userInfo.profilePicture && \n                        <div>\n                            <img className='profile_image' src={ this.state.userInfo.profilePicture } />\n                        </div>\n                    }\n                    { this.state.isProfileOwner &&\n                        <Text id='change_profile_pic' onClick={this.openProfileModal}>Change Profile Picture</Text>\n                    }\n                    <div id='name_and_loc'>\n                        <div id='name'>\n                            { (this.state.userInfo && this.state.userInfo.username) && (this.state.isProfileOwner \n                                ? <Title editable={{ onChange: this.onUsernameEdit }}>{ this.state.userInfo.username }</Title>\n                                : <Title>{ this.state.userInfo.username }</Title>)\n                            }\n                        </div>\n                        <div id='loc'>\n                            { (this.state.userInfo && (this.state.userInfo.address))\n                                ? <Title level={3}>{ this.state.userInfo.address }</Title>\n                                : (this.state.userInfo \n                                    ? <Title level={3}>{ this.state.userInfo.city }</Title> \n                                    : <></>)\n                            }\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div id='hosting'>\n                    <Title level={2}>Games Hosting</Title>\n                    <hr />\n                    <div className='games_list'>\n                        <div className='games_list_children'>\n                            { hostingCards.length ?\n                            <>\n                                <div className='games_list_carousel'>\n                                    <Carousel ref={ node => (this.carouselHosting = node) } { ...props } slidesToShow={ Math.min(4, hostingCards.length) } >\n                                        { hostingCards }\n                                    </Carousel>\n                                </div>\n                                <br />\n                                <div className='scroll-group'>\n                                    <Icon type='left-circle' className='scroll' onClick={ this.prevHosting } />\n                                    <Icon type='right-circle' className='scroll' onClick={ this.nextHosting } />\n                                </div>\n                            </>\n                            : <Empty />\n                            }\n                        </div>\n                    </div>\n                    <Title level={2}>Favorites</Title>\n                    <hr />\n                    <div className='games_list'>\n                        <div className='games_list_children'>\n                            { favoritesCards.length ? \n                            <>\n                                <div className='games_list_carousel'>\n                                    <Carousel ref={ node => (this.carouselFavorites = node) } { ...props } slidesToShow={ Math.min(4, favoritesCards.length) } >\n                                        { favoritesCards }\n                                    </Carousel>\n                                </div>\n                                <br/>\n                                <div className='scroll-group'>\n                                    <Icon type='left-circle' className='scroll' onClick={ this.prevFavorites } />\n                                    <Icon type='right-circle' className='scroll' onClick={ this.nextFavorites } /> \n                                </div>\n                            </>\n                            : <Empty />\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div id='bio'>\n                    <div id='bio_title'>\n                        <Title level={3}>bio</Title>\n                    </div>\n                    <div id='bio_info'>\n                        { (this.state.userInfo && this.state.userInfo.bio) && ( this.state.isProfileOwner\n                            ? <Paragraph ellipsis={{ rows: 5, expandable: true }} editable={{ onChange: this.onBioEdit }}>{ this.state.userInfo.bio }</Paragraph>\n                            : <Paragraph ellipsis={{ rows: 5, expandable: true }}>{ this.state.userInfo.bio }</Paragraph>)\n                        }\n                    </div>\n                    <Link to={ `/messages?id=${ this.state.userId }` }><Title level={3}><Icon type=\"mail\" /> Message this host</Title></Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from \"react\";\nimport {\n  Menu,\n  Icon,\n  Input,\n  Dropdown,\n  Row,\n  Col,\n  Typography,\n  Layout,\n  Button,\n  Carousel,\n  Avatar\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./Games.css\";\nimport config from '../config.json'\n\nconst { SubMenu } = Menu;\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\nclass Games extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n    this.limit = \"50\";\n    this.state = {\n      apiResponse: [],\n      title: \"\"\n    };\n  }\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  genre_filter = (\n    <Menu>\n      <SubMenu title=\"A-I\">\n        <Menu.Item onClick={() => this.genre(`adventure`)}>Adventure</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`arcade`)}>Arcade</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`fighting`)}>Fighting</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`hack-and-slash-beat-em-up`)}>\n          Hack-and-Slash / Beat-Em-Up\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`indie`)}>Indie</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"M-P\">\n        <Menu.Item onClick={() => this.genre(`music`)}>Music</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`pinball`)}>Pinball</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`platform`)}>Platform</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`point-and-click`)}>\n          Point-and-Click\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`puzzle`)}>Puzzle</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"Q-R\">\n        <Menu.Item onClick={() => this.genre(`quiz-trivia`)}>\n          Quiz / Trivia\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`racing`)}>Racing</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`real-time-strategy-rts`)}>\n          RTS\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`role-playing-rpg`)}>\n          RPG\n        </Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"S\">\n        <Menu.Item onClick={() => this.genre(`shooter`)}>Shooter</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`simulator`)}>Simulator</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`sport`)}>Sport</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`strategy`)}>Strategy</Menu.Item>\n      </SubMenu>\n      <SubMenu title=\"T-V\">\n        <Menu.Item onClick={() => this.genre(`tactical`)}>Tactical</Menu.Item>\n        <Menu.Item onClick={() => this.genre(`turn-based-strategy-tbs`)}>\n          Turn-Based\n        </Menu.Item>\n        <Menu.Item onClick={() => this.genre(`visual-novel`)}>\n          Visual-Novel\n        </Menu.Item>\n      </SubMenu>\n    </Menu>\n  );\n\n  search(value) {\n    this.state.title = `Search for: \"${value}\"`;\n    fetch(`${config.backend_url}/igdb/search?title=${value}`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  popular() {\n    this.state.title = `Most Popular`;\n    fetch(`${config.backend_url}/igdb/popular?limit=${this.limit}`)\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  genre(value) {\n    this.state.title = `Genre: \"${value}\"`;\n    fetch(\n      `${config.backend_url}/igdb/searchbyGenre?genre=${value}&limit=${this.limit}`\n    )\n      .then(res => res.json())\n      .then(data => this.setState({ apiResponse: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n    this.popular();\n  }\n\n  render() {\n    const props = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 6\n    };\n    return (\n      <div>\n        <br></br>\n        <Row>\n          <Col span={18}>\n            <div>\n              <Text>Browse By </Text>\n              <Button onClick={() => this.popular()}>popular</Button>\n              <Dropdown overlay={this.genre_filter}>\n                <Button>\n                  genre <Icon type=\"down\" />\n                </Button>\n              </Dropdown>\n            </div>\n          </Col>\n          <Col span={6}>\n            <Search\n              placeholder=\"Search by Name\"\n              onSearch={value => this.search(value)}\n            />\n          </Col>\n        </Row>\n        <br></br>\n        <Title>{this.state.title}</Title>\n        <Carousel\n          class=\"carousel\"\n          ref={node => (this.carousel = node)}\n          {...props}\n        >\n          {this.state.apiResponse.map(elem => {\n            return (\n              <div className=\"image-container\">\n                <Link to={`/singlegame/?id=${elem.id}`}>\n                  <img className=\"elem-image\" src={\"http://\" + elem.coverUrl} />\n                </Link>\n                <div className=\"name-text-box\">\n                  <p className=\"name-text\">{elem.name}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Carousel>\n          <Avatar className=\"arrow-left\" size=\"large\" icon=\"left-circle\" onClick={this.previous} /> \n          <Avatar className=\"arrow-right\" size=\"large\" icon=\"right-circle\" onClick={this.next} />\n        {/* <div></div> */}\n      </div>\n    );\n  }\n}\n\nexport default Games;\n","import React, { Component } from 'react';\n\nexport default class FacebookLogin extends Component {\n\n  componentDidMount() {\n    document.addEventListener('FBObjectReady', this.initializeFacebookLogin);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('FBObjectReady', this.initializeFacebookLogin);\n  }\n\n  /**\n   * Init FB object and check Facebook Login status\n   */\n  initializeFacebookLogin = () => {\n    this.FB = window.FB;\n    this.checkLoginStatus();\n  }\n\n  /**\n   * Check login status\n   */\n  checkLoginStatus = () => {\n    this.FB.getLoginStatus(this.facebookLoginHandler);\n  }\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  facebookLogin = () => {\n    if (!this.FB) return;\n\n    this.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.facebookLoginHandler(response);\n      } else {\n        this.FB.login(this.facebookLoginHandler, {scope: 'public_profile'});\n      }\n    }, );\n  }\n\n  /**\n   * Handle login response\n   */\n  facebookLoginHandler = response => {\n    if (response.status === 'connected') {\n      this.FB.api('/me', userData => {\n        let result = {\n          ...response,\n          user: userData\n        };\n        this.props.onLogin(true, result);\n      });\n    } else {\n      this.props.onLogin(false);\n    }\n  }\n\n  render() {\n    let {children} = this.props;\n    return (\n      <div onClick={this.facebookLogin}>\n        {children}\n      </div>\n    );\n  }\n}","import React, { useDebugValue } from \"react\";\nimport {\n  Card,\n  Descriptions,\n  Tag,\n  Rate,\n  Icon,\n  Avatar,\n  Button,\n  Row,\n  Col,\n  Typography,\n  Layout,\n  Input,\n  Carousel\n} from \"antd\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport FacebookLoginButton from \"./FacebookLoginButton\";\n\nimport \"./SingleGame.css\";\n\nconst { Content } = Layout;\nconst { Search } = Input;\nconst { Title, Text } = Typography;\n\nclass SingleGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: {},\n      apiScreenshots: [],\n      apiAges: {},\n      apiDescription: {},\n      apiGenre: {},\n      apiPlatforms: {},\n      coverUrl: \"\",\n      descriptionFound: false\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n  }\n\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  convertDate(timestamp){\n    var ts = new Date(timestamp).toDateString().split(' ').slice(1).join(' ');\n    return ts;\n  }\n  onFacebookLogin(loginStatus, resultObject) {\n    // if (loginStatus === true) {\n    //   this.setState({\n    //     username: resultObject.user.name\n    //   });\n    // } else {\n    //   alert(\"Facebook login error\");\n    // }\n  }\n\n  getGame() {\n    var url =\n      `http://localhost:9000/igdb/game?id=` +\n      new URLSearchParams(window.location.search).get(\"id\");\n    fetch(url)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          apiResponse: data,\n          apiScreenshots: data.screenshots, // find a way to loop over all screenshots\n          apiAges: data.age_ratings[0][0],\n          apiGenre: data.genres[0][0], // find a way to loop over all genres so i can put in tags (use var i or something)\n          apiPlatforms: data.platforms[0][0],\n          \n        })\n      )\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  getDescription() {\n    var url =\n      `http://localhost:9000/igdb/game?id=` +\n      new URLSearchParams(window.location.search).get(\"id\");\n    fetch(url)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          apiDescription: data.age_ratings[1][0],\n          descriptionFound: true\n        })\n      )\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  cover() {\n    var url =\n      `http://localhost:9000/igdb/cover?id=` +\n      new URLSearchParams(window.location.search).get(\"id\");\n    fetch(url)\n      .then(res => res.text())\n      .then(data => this.setState({ coverUrl: data }))\n      .catch(err => console.log(`Error is: ${err}`));\n  }\n\n  componentDidMount() {\n    this.getGame();\n    this.getDescription();\n    this.cover();\n  }\n\n  render() {\n    const carouselProps = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n        <Content>\n          <Row>\n            <Col span={8} alignItems=\"top\">\n              <div class=\"container\">\n                <img\n                  height=\"375\"\n                  width=\"260\"\n                  src={\"http://\" + this.state.coverUrl}\n                />\n                <br />\n                <div class=\"small-container\">\n                  <Rate character={<Icon type=\"heart\" />} count={1} />\n                  {/* <Text> {this.state.apiResponse.rating}</Text> */}\n                  <Rate\n                    character={<Icon type=\"star\" />}\n                    allowHalf\n                    disabled\n                    defaultValue={4.5}\n                  />\n                </div>\n                <br />\n                <Card title=\"Where To Play\" style={{ width: 300 }}>\n                  <Avatar size=\"small\" icon=\"user\" />\n                  <Avatar size=\"small\" icon=\"user\" />\n                  <Avatar size=\"small\" icon=\"user\" />\n                  <br />\n                  <Link>My Hosts</Link>\n                  <br />\n                  <Link to={`/people`}>More Hosts</Link>\n                  {/* link to people page  */}\n                </Card>\n              </div>\n            </Col>\n            <Col span={8}>\n              <div class=\"container\">\n                <Title>{this.state.apiResponse.name}</Title>\n                <br />\n                  {(() => {\n                    if (this.state.descriptionFound) {\n                      return (\n                        <Text>\n                          {this.state.apiDescription.synopsis}\n                        </Text>\n                      )\n                   } else {\n                      return (\n                        <Text>\n                          No description found.\n                        </Text>\n                      )\n                    }\n                    })()}\n                <br />\n                <Title level={2}>Screencaps</Title>\n              </div>\n              <br />\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                  <Col span={2}><Avatar className=\"arrow-left\" icon=\"left-circle\" onClick={this.previous} /></Col>\n                  \n                <Col span={20}><Carousel\n                  class=\"carousel\"\n                  ref={node => (this.carousel = node)}\n                  {...carouselProps}\n        >       \n                {this.state.apiScreenshots.map(elem => {\n                  return (\n                  <div align=\"center\" className=\"carousel-container\">\n                    <img className=\"image-container\" src={\"http:\" + elem[0].url.replace(\"t_thumb\", \"t_720p\")} />\n                  </div>\n                  );\n                })}\n                </Carousel></Col>\n                <Col span={2}><Avatar className=\"arrow-right\" icon=\"right-circle\" onClick={this.next} /></Col>\n                </Row>\n            </Col>\n            <Col span={8}>\n              <div class=\"container\">\n                {/* if user is not logged in, show this button and link to the facebook*/}\n                <FacebookLoginButton onLogin={this.onFacebookLogin}>\n                  <Button>sign in to log, rate, or review</Button>\n                </FacebookLoginButton>\n                <br />\n                <Button>share</Button>\n                <br />\n                <Card title=\"Details\" style={{ width: 350 }}>\n                  <Descriptions>\n                    <Descriptions.Item label=\"platform\">\n                      {this.state.apiPlatforms.name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"version\">\n                      {this.state.apiPlatforms.versions}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"release date\">\n                      {this.convertDate(this.state.apiResponse.first_release_date * 1000)}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"rating\">\n                      {this.state.apiResponse.rating_count}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"suitable for\">\n                      {this.state.apiAges.synopsis}\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <div class=\"small-container\">\n                    <Tag>{this.state.apiGenre.name}</Tag>\n                    <Tag>Action</Tag>\n                    <Tag>Classics</Tag>\n                  </div>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n        </Content>\n    );\n  }\n}\n\nexport default SingleGame;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Messages from \"./components/Messages\";\nimport Profile from \"./components/Profile\";\nimport Games from \"./components/Games\";\nimport SingleGame from \"./components/SingleGame\";\n\nclass App extends Component {\n  state = {\n    user: \"test\" // Add more states and change this when linked with backend.\n  };\n\n  setUser = (user) => {\n    console.log(user);\n    this.setState({ user });\n  }\n\n  render() {\n    console.log(this.state.user);\n    return (\n      <HashRouter>\n        <div>\n          <Header user={this.state.user} />\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <Home { ...props } /> }  />\n            <Route path=\"/inbox\" render={(props) => <Messages user={this.state.user} { ...props } /> } />\n            <Route path=\"/games\" render={(props) => <Games user={this.state.user} { ...props } /> } />\n            <Route path=\"/singlegame\" render={(props) => <SingleGame user={this.state.user} { ...props } /> } />\n            <Route path='/profile' render={(props) => <Profile setUser={this.setUser} user={this.state.user} { ...props } /> } />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}